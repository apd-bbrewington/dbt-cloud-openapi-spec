openapi: 3.0.3
info:
  title: dbt Cloud API v2
  version: 2.0.0
  description: "# How to use this API\n\nThe dbt Cloud API v2 contains endpoints for\
    \ enqueuing runs from a job, polling for run progress,\nand downloading artifacts\
    \ after jobs have completed running. For operational endpoints to\ncreate, modify,\
    \ and delete _objects_ in dbt Cloud, consider using [API v3](https://docs.getdbt.com/dbt-cloud/api-v3#/)\n\
    \nThe API docs are generated from an openapi spec defined in the\n[dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec/blob/master/openapi-v2.yaml)\n\
    repository. If you find issues in these docs or have questions about using the\
    \ dbt Cloud\nAPI, please open an issue in the dbt-cloud-openapi-spec repo or contact\
    \ support@getdbt.com.\n\n## Authentication\n\nTo authenticate an application with\
    \ the dbt Cloud API, navigate to the\nAPI Settings page in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).\n\
    If you cannot access this page, confirm that your dbt Cloud account has access\
    \ to the API,\nand that you are using the hosted version of dbt Cloud. If dbt\
    \ Cloud is running inside of a VPC\nin an Enterprise account, contact your account\
    \ manager for help finding your API key.\n\nOnce you've found your API key, use\
    \ it in the Authorization header of requests to the dbt Cloud API.\nBe sure to\
    \ include the `Token` prefix in the Authorization header, or the request will\
    \ fail with a\n\"401 Unauthorized\" error.\n\n*Note: `Bearer` can be used in place\
    \ of `Token` in the Authorization header. Both syntaxes are equivalent.*\n\n**Headers**\n\
    ```\nAccept: application/json\nAuthorization: Token <your token>\n```  \n\n##\
    \ Pagination\n\nAll top-level API resources support bulk fetches using the \"\
    list\" or `GET` API methods. These API methods accept `limit` and `offset` query\
    \ parameters that you can use together to paginate results and return a subset\
    \ of those results.\n\n* Offset: Specifies how many records to skip. Can be an\
    \ integer 0 and higher.\n* Limit: Specifies the maximum records you want to retrieve\
    \ in a single request. Can be an integer up to 100. This limit makes responses\
    \ easier to handle for servers and people.\n\n\n## Example request\n\nThe following\
    \ example uses the list projects endpoint to list the projects that your token\
    \ is authorized to access.\nThis request skips the first 10 projects and lists\
    \ the next 10 projects.\nBe sure to replace `<YOUR_TOKEN>` in the Authorization\
    \ header with your actual API token and `<YOUR_ACCOUNT_ID>` with your actual account\
    \ ID.\n\n```bash\ncurl --request GET \\\n  --url 'https://cloud.getdbt.com/api/v3/accounts/<YOUR_ACCOUNT_ID/projects/?limit=10&offset=5'\
    \ \\\n  --header 'Content-Type: application/json' \\\n  --header 'Authorization:\
    \ Token <YOUR_TOKEN>'\n```\n"
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
  /api/v2/accounts/:
    get:
      operationId: List Accounts
      description: Deprecated. Consider using the v3 API instead.
      tags:
      - Accounts
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/:
    get:
      operationId: Retrieve Account
      description: Retrieve an Account
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Accounts
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEnveloped'
          description: ''
    post:
      operationId: Update Account
      description: Update an account
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/connections/:
    get:
      operationId: List Connections
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    post:
      operationId: Create Connection
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/connections/{id}/:
    get:
      operationId: Retrieve Connection
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    post:
      operationId: Update Connection
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    delete:
      operationId: Destroy Connection
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/encryptions/:
    get:
      operationId: List SSH Tunnels
      description: List SSH tunnels
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Create SSH Tunnel
      description: Create a new SSH tunnel to encrypt traffic for a given connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/encryptions/{id}/:
    get:
      operationId: Retrieve SSH Tunnel
      description: Retrieve an SSH tunnel
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Update SSH Tunnel
      description: Update an SSH tunnel
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    delete:
      operationId: Destroy SSH Tunnel
      description: Delete an SSH tunnel
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/environments/:
    get:
      operationId: List Environments
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Create Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
  /api/v2/accounts/{account_id}/environments/{id}/:
    get:
      operationId: Retrieve Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Update Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/invites/:
    get:
      operationId: List Invites
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/invites/{id}/:
    get:
      operationId: Retrieve Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/:
    get:
      operationId: List Jobs
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Create Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Job Artifact
      description: Given a job id and *a set of Run filters* return the latest matching
        artifact for that job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/run/:
    post:
      operationId: Trigger Job Run
      description: Use this endpoint to kick off a run for a job. When this endpoint
        returns a successful response, a new run will be enqueued for the account.
        Users can poll the Get run endpoint to poll the run until it completes. After
        the run has completed, users can use the Get run artifact endpoint to download
        artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{id}/:
    get:
      operationId: Retrieve Job
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Update Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    delete:
      operationId: Destroy Job
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/licenses/:
    get:
      operationId: List Account Licenses
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Licenses
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/notifications/:
    get:
      operationId: List Notifications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: external_email
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: slack_channel_id
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Create Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/notifications/{id}/:
    get:
      operationId: Retrieve Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: external_email
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: slack_channel_id
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Update Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    delete:
      operationId: Destroy Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: external_email
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: slack_channel_id
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/permissions/{id}/:
    post:
      operationId: Create Permission
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Permissions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Create Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Update Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    delete:
      operationId: Destroy Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/repositories/:
    get:
      operationId: List Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    post:
      operationId: Create Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
  /api/v2/accounts/{account_id}/repositories/{id}/:
    get:
      operationId: Retrieve Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/runs/:
    get:
      operationId: List Runs
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: finished_at__range
        schema:
          type: array
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{id}/:
    get:
      operationId: Retrieve Run
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: finished_at__range
        schema:
          type: array
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/:
    get:
      operationId: List Run Artifacts
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Run Artifact
      description: Use this endpoint to fetch artifacts from a completed run. Once
        a run has completed, you can use this endpoint to download the `manifest.json`,
        run `results.json` or `catalog.json` files from dbt Cloud. These artifacts
        contain information about the models in your dbt project, timing information
        around their execution, and a status message indicating the result of the
        model build. By default, this endpoint returns artifacts from the last step
        in the run. To list artifacts from other steps in the run, use the step query
        parameter described below.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      - in: query
        name: step
        schema:
          type: integer
        description: The index of the Step in the Run to query for artifacts. The
          first step in the run has the index `1`. If the `step` parameter is omitted,
          then this endpoint will return the artifacts compiled for the last step
          in the run.
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/cancel/:
    post:
      operationId: Cancel Run
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/retry/:
    get:
      operationId: Get details of the failed retryable job
      description: Use this endpoint to details about a retryable job that has failed.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Retry a failed run for a job
      description: Use this endpoint to retry a failed run for a job. When this endpoint
        returns a successful response, a new run will be enqueued for the account.
        Users can poll the Get run endpoint to poll the run until it completes. After
        the run has completed, users can use the Get run artifact endpoint to download
        artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/steps/{id}/:
    get:
      operationId: Retrieve Run Step
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/users/:
    get:
      operationId: List Users
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/notifications/unsubscribe/:
    post:
      operationId: Unsubscribe from Notifications
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/users/{id}/:
    get:
      operationId: Retrieve User
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
    post:
      operationId: Update User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
components:
  schemas:
    Account:
      type: object
      required:
      - id
      - name
      - state
      - plan
      - pending_cancel
      - run_slots
      - developer_seats
      - docs_job_id
      - freshness_job_id
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
          description: The name of the account
        state:
          type: integer
        plan:
          type: string
          description: The active plan type for the account
        pending_cancel:
          type: boolean
        run_slots:
          type: integer
          description: The total number of run slots the account may use
        developer_seats:
          type: integer
          description: The total number of developer seats the account may use
        it_seats:
          type: integer
          description: The total number of IT seats the account may use
        read_only_seats:
          type: integer
          description: The total number of Read Only seats the account may use
        pod_memory_request_mebibytes:
          type: integer
        run_duration_limit_seconds:
          type: integer
        queue_limit:
          type: integer
        stripe_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        metronome_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        salesforce_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        third_party_billing:
          oneOf:
          - type: 'null'
          - {}
        billing_email_address:
          oneOf:
          - type: 'null'
          - type: string
        locked:
          type: boolean
          description: Whether the account is currently locked
        lock_reason:
          oneOf:
          - type: 'null'
          - type: string
          description: Why the account is locked
        lock_cause:
          oneOf:
          - type: 'null'
          - {}
          - {}
          - {}
          - {}
          description: Why the account is locked
        develop_file_system:
          type: boolean
        unlocked_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        unlock_if_subscription_renewed:
          type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_login_slug:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_unique_identifier:
          oneOf:
          - type: 'null'
          - type: string
        business_critical:
          type: boolean
        groups:
          oneOf:
          - type: 'null'
          - {}
          description: The user groups in the account
        created_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        updated_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        starter_repo_url:
          oneOf:
          - type: 'null'
          - type: string
        git_auth_level:
          oneOf:
          - type: 'null'
          - type: string
        identifier:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - minLength: 31
              maxLength: 31
        trial_end_date:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        static_subdomain:
          oneOf:
          - type: 'null'
          - type: string
        run_locked_until:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        docs_job_id:
          oneOf:
          - type: 'null'
          - type: integer
          description: (Deprecated)
        freshness_job_id:
          oneOf:
          - type: 'null'
          - type: integer
          description: (Deprecated)
        allow_repo_caching:
          type: boolean
          description: Repo caching is not currently available. Coming soon!
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AccountEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    AccountRequest:
      type: object
      required:
      - id
      - name
      - state
      - plan
      - pending_cancel
      - run_slots
      - developer_seats
      - docs_job_id
      - freshness_job_id
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
          description: The name of the account
        state:
          type: integer
        plan:
          type: string
          description: The active plan type for the account
        pending_cancel:
          type: boolean
        run_slots:
          type: integer
          description: The total number of run slots the account may use
        developer_seats:
          type: integer
          description: The total number of developer seats the account may use
        it_seats:
          type: integer
          description: The total number of IT seats the account may use
        read_only_seats:
          type: integer
          description: The total number of Read Only seats the account may use
        pod_memory_request_mebibytes:
          type: integer
        run_duration_limit_seconds:
          type: integer
        queue_limit:
          type: integer
        stripe_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        metronome_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        salesforce_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        third_party_billing:
          oneOf:
          - type: 'null'
          - {}
        billing_email_address:
          oneOf:
          - type: 'null'
          - type: string
        locked:
          type: boolean
          description: Whether the account is currently locked
        lock_reason:
          oneOf:
          - type: 'null'
          - type: string
          description: Why the account is locked
        lock_cause:
          oneOf:
          - type: 'null'
          - {}
          - {}
          - {}
          - {}
          description: Why the account is locked
        develop_file_system:
          type: boolean
        unlocked_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        unlock_if_subscription_renewed:
          type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_login_slug:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_unique_identifier:
          oneOf:
          - type: 'null'
          - type: string
        business_critical:
          type: boolean
        groups:
          oneOf:
          - type: 'null'
          - {}
          description: The user groups in the account
        starter_repo_url:
          oneOf:
          - type: 'null'
          - type: string
        git_auth_level:
          oneOf:
          - type: 'null'
          - type: string
        identifier:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - minLength: 31
              maxLength: 31
        trial_end_date:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        static_subdomain:
          oneOf:
          - type: 'null'
          - type: string
        run_locked_until:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        docs_job_id:
          oneOf:
          - type: 'null'
          - type: integer
          description: (Deprecated)
        freshness_job_id:
          oneOf:
          - type: 'null'
          - type: integer
          description: (Deprecated)
        allow_repo_caching:
          type: boolean
          description: Repo caching is not currently available. Coming soon!
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnection:
      type: object
      required:
      - id
      - account_id
      - name
      - type
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_service_token_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        type:
          type: string
        state:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnectionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BaseConnection'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    BaseConnectionRequest:
      type: object
      required:
      - id
      - account_id
      - name
      - type
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_service_token_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        type:
          type: string
        state:
          type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    ConnectionEncryption:
      type: object
      required:
      - account_id
      - connection_id
      - username
      - port
      - hostname
      properties:
        account_id:
          type: integer
          description: The account the connection is associated with
        connection_id:
          type: integer
          description: The connection to use the SSH tunnel with
        username:
          type: string
          description: SSH username
        port:
          type: integer
          description: SSH port
        hostname:
          type: string
          description: SSH hostname
        id:
          oneOf:
          - type: integer
          - type: 'null'
          readOnly: true
        public_key:
          oneOf:
          - type: string
          - type: 'null'
          description: SSH Public key
        state:
          type: integer
          default: 1
      additionalProperties: false
      description: 'ConnectionEncryption(account_id: int, connection_id: int, username:
        str, port: int, hostname: str, id: Union[int, NoneType] = None, public_key:
        Union[str, NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
        Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None, state:
        int = 1)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    ConnectionEncryptionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionEncryption'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ConnectionEncryptionRequest:
      type: object
      required:
      - account_id
      - connection_id
      - username
      - port
      - hostname
      properties:
        account_id:
          type: integer
          description: The account the connection is associated with
        connection_id:
          type: integer
          description: The connection to use the SSH tunnel with
        username:
          type: string
          description: SSH username
        port:
          type: integer
          description: SSH port
        hostname:
          type: string
          description: SSH hostname
        public_key:
          oneOf:
          - type: string
          - type: 'null'
          description: SSH Public key
        private_key:
          oneOf:
          - type: string
          - type: 'null'
          description: SSH private key
          writeOnly: true
        state:
          type: integer
          default: 1
      additionalProperties: false
      description: 'ConnectionEncryption(account_id: int, connection_id: int, username:
        str, port: int, hostname: str, id: Union[int, NoneType] = None, public_key:
        Union[str, NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
        Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None, state:
        int = 1)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Defaults:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2:
      type: object
      required:
      - account_id
      - connection_id
      - created_by_id
      - name
      - dbt_project_subdirectory
      - use_custom_branch
      - custom_branch
      - dbt_version
      - supports_docs
      - repository_id
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: 'null'
          - type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_project_subdirectory:
          oneOf:
          - type: 'null'
          - type: string
        use_custom_branch:
          type: boolean
        custom_branch:
          oneOf:
          - type: 'null'
          - type: string
        dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        raw_dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        supports_docs:
          type: boolean
        repository_id:
          oneOf:
          - type: 'null'
          - type: integer
        state:
          type: integer
        repository:
          oneOf:
          - type: 'null'
          - {}
        jobs: {}
        connection:
          oneOf:
          - type: 'null'
          - {}
        custom_environment_variables:
          oneOf:
          - type: 'null'
          - {}
        created_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        updated_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        extended_attributes_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    EnvironmentV2Enveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentV2'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2Request:
      type: object
      required:
      - account_id
      - connection_id
      - created_by_id
      - name
      - dbt_project_subdirectory
      - use_custom_branch
      - custom_branch
      - dbt_version
      - supports_docs
      - repository_id
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: 'null'
          - type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_project_subdirectory:
          oneOf:
          - type: 'null'
          - type: string
        use_custom_branch:
          type: boolean
        custom_branch:
          oneOf:
          - type: 'null'
          - type: string
        dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        raw_dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        supports_docs:
          type: boolean
        repository_id:
          oneOf:
          - type: 'null'
          - type: integer
        state:
          type: integer
        repository:
          oneOf:
          - type: 'null'
          - {}
        jobs: {}
        connection:
          oneOf:
          - type: 'null'
          - {}
        custom_environment_variables:
          oneOf:
          - type: 'null'
          - {}
        extended_attributes_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InternalJobDefinition:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        description:
          allOf:
          - type: string
          - minLength: 0
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers:
          description: 'only one of the following fields can be true: triggers.github_webhook,
            triggers.schedule, & triggers.git_provider_webhook'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule:
          description: schedule is only required if triggers.schedule is true
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        environment: {}
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - type: 'null'
        triggers_on_draft_pr:
          type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InternalJobDefinitionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InternalJobDefinition'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    InternalJobDefinitionRequest:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        description:
          allOf:
          - type: string
          - minLength: 0
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers:
          description: 'only one of the following fields can be true: triggers.github_webhook,
            triggers.schedule, & triggers.git_provider_webhook'
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule:
          description: schedule is only required if triggers.schedule is true
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        environment: {}
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - type: 'null'
        triggers_on_draft_pr:
          type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Invite:
      type: object
      required:
      - id
      - account_id
      - email_address
      - license_type
      - status
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        email_address:
          oneOf:
          - type: 'null'
          - type: string
        license_type:
          oneOf:
          - {}
          - {}
          - {}
        status:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - {}
        code:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        redeemed_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        group_ids:
          allOf:
          - {}
          - {}
        account: {}
        groups:
          allOf:
          - {}
          - {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InviteEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invite'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobNotificationSettings:
      type: object
      required:
      - id
      - account_id
      - type
      - state
      - on_cancel
      - on_failure
      - on_success
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        state:
          type: integer
        on_cancel: {}
        on_failure: {}
        on_success: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_id:
          type: integer
        external_email:
          oneOf:
          - type: string
          - type: 'null'
        user: {}
        slack_channel_id:
          oneOf:
          - type: string
          - type: 'null'
        slack_channel_name:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    JobNotificationSettingsEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobNotificationSettings'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobNotificationSettingsRequest:
      type: object
      required:
      - id
      - account_id
      - type
      - state
      - on_cancel
      - on_failure
      - on_success
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        state:
          type: integer
        on_cancel: {}
        on_failure: {}
        on_success: {}
        user_id:
          type: integer
        external_email:
          oneOf:
          - type: string
          - type: 'null'
        user: {}
        slack_channel_id:
          oneOf:
          - type: string
          - type: 'null'
        slack_channel_name:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Project:
      type: object
      required:
      - name
      - account_id
      properties:
        name:
          type: string
          description: The name of the project
        account_id:
          type: integer
          description: The account the project is associated with
        connection_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The active connection
        repository_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The active repository
        semantic_layer_config_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The active semantic layer configuration
        id:
          oneOf:
          - type: integer
          - type: 'null'
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        skipped_setup:
          oneOf:
          - type: boolean
          - type: 'null'
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          oneOf:
          - type: string
          - type: 'null'
        connection:
          oneOf:
          - $ref: '#/definitions/BaseConnectionV3'
          - type: 'null'
          readOnly: true
        repository:
          oneOf:
          - $ref: '#/definitions/RepositoryV3'
          - type: 'null'
          readOnly: true
        group_permissions:
          oneOf:
          - type: array
            items:
              $ref: '#/definitions/GroupPermission'
          - type: 'null'
          readOnly: true
        docs_job_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The job used for docs generation
        freshness_job_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The job used for source freshness generation
        docs_job:
          oneOf:
          - $ref: '#/definitions/JobDefinitionV2'
          - type: 'null'
          readOnly: true
        freshness_job:
          oneOf:
          - $ref: '#/definitions/JobDefinitionV2'
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'Project(name: str, account_id: int, connection_id: Union[int,
        NoneType] = None, repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
        Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state: int
        = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection: Union[models.connection.common.BaseConnectionV3,
        NoneType] = None, repository: Union[models.repository.RepositoryV3, NoneType]
        = None, group_permissions: Union[List[models.permissions.group_permission.GroupPermission],
        NoneType] = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id:
        Union[int, NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None)'
      definitions:
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
              description: The account the connection is associated with
            project_id:
              type: integer
              description: The project the connection is associated with
            name:
              type: string
              description: The name of the connection
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
              description: The account the connection is associated with
            connection_id:
              type: integer
              description: The connection to use the SSH tunnel with
            username:
              type: string
              description: SSH username
            port:
              type: integer
              description: SSH port
            hostname:
              type: string
              description: SSH hostname
            id:
              oneOf:
              - type: integer
              - type: 'null'
            public_key:
              oneOf:
              - type: string
              - type: 'null'
              description: SSH Public key
            private_key:
              oneOf:
              - type: string
              - type: 'null'
              description: SSH private key
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, id: Union[int, NoneType] = None,
            public_key: Union[str, NoneType] = None, private_key: Union[str, NoneType]
            = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, state: int = 1)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            is_configured_for_oauth: bool = False)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required: []
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
              - $ref: '#/definitions/SynapseConnectionSchema'
              - $ref: '#/definitions/FabricConnectionSchema'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema, schemas.adapters.synapse.connection_schema.SynapseConnectionSchema,
            schemas.adapters.fabric.connection_schema.FabricConnectionSchema, NoneType]
            = None, _encrypted_values: Union[Dict[str, models.encrypted_field.DataclassEncryptedField],
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, is_configured_for_oauth:
            bool = False)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                client_id:
                  metadata:
                    label: OAuth Client ID
                    description: Required to enable Databricks OAuth authentication
                      for IDE developers.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                client_secret:
                  metadata:
                    label: OAuth Client Secret
                    description: Required to enable Databricks OAuth authentication
                      for IDE developers.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''), client_id=TextField(metadata=TextFieldMetadata(label=''OAuth
            Client ID'', description=''Required to enable Databricks OAuth authentication
            for IDE developers.'', field_type=''text'', encrypt=True, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), client_secret=TextField(metadata=TextFieldMetadata(label=''OAuth
            Client Secret'', description=''Required to enable Databricks OAuth authentication
            for IDE developers.'', field_type=''text'', encrypt=True, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            client_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: OAuth Client ID
                  description: Required to enable Databricks OAuth authentication
                    for IDE developers.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            client_secret:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: OAuth Client Secret
                  description: Required to enable Databricks OAuth authentication
                    for IDE developers.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''), client_id: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''OAuth Client ID'', description=''Required
            to enable Databricks OAuth authentication for IDE developers.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), client_secret:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''OAuth
            Client Secret'', description=''Required to enable Databricks OAuth authentication
            for IDE developers.'', field_type=''text'', encrypt=True, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        SynapseConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/SynapseConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: synapse
                driver:
                  metadata:
                    label: Driver
                    description: The ODBC driver to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 1433
                database:
                  metadata:
                    label: Database
                    description: The name of the database.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                retries:
                  metadata:
                    label: Retries
                    description: The number of automatic times to retry a query before
                      failing. Defaults to 1. Queries with syntax errors will not
                      be retried. This setting can be used to overcome intermittent
                      network issues.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 1
                login_timeout:
                  metadata:
                    label: Login timeout
                    description: The number of seconds used to establish a connection
                      before failing. Defaults to 0, which means that the timeout
                      is disabled or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 0
                query_timeout:
                  metadata:
                    label: Query timeout
                    description: The number of seconds used to wait for a query before
                      failing. Defaults to 0, which means that the timeout is disabled
                      or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 0
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'SynapseConnectionSchema(fields: schemas.adapters.synapse.connection_schema.SynapseConnectionFields
            = SynapseConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''synapse''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description=''The ODBC driver to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=IntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database=TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The name of the database.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries=IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1), login_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0), query_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0)), field_order: List[str] = <factory>)'
        SynapseConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: synapse
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: The ODBC driver to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 1433
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Database
                  description: The name of the database.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            retries:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Retries
                  description: The number of automatic times to retry a query before
                    failing. Defaults to 1. Queries with syntax errors will not be
                    retried. This setting can be used to overcome intermittent network
                    issues.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 1
            login_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Login timeout
                  description: The number of seconds used to establish a connection
                    before failing. Defaults to 0, which means that the timeout is
                    disabled or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 0
            query_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Query timeout
                  description: The number of seconds used to wait for a query before
                    failing. Defaults to 0, which means that the timeout is disabled
                    or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 0
          additionalProperties: false
          description: 'SynapseConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''synapse''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description=''The
            ODBC driver to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Host'', description=''The
            hostname of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.IntegerField
            = IntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The name of the database.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries:
            schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1), login_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0), query_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0))'
        IntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/IntegerFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'IntegerField(metadata: schemas.fields.IntegerField.IntegerFieldMetadata,
            value: int = None)'
        IntegerFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: number
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericIntegerValidation'
              default:
                required: false
          additionalProperties: false
          description: 'IntegerFieldMetadata(label: str, description: str, field_type:
            str = ''number'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.IntegerField.GenericIntegerValidation = GenericIntegerValidation(required=False))'
        GenericIntegerValidation:
          type: object
          required: []
          properties:
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
          additionalProperties: false
          description: 'GenericIntegerValidation(required: Union[bool, NoneType] =
            False)'
        FabricConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/FabricConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: fabric
                driver:
                  metadata:
                    label: Driver
                    description: The driver to use for this connection.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ODBC Driver 18 for SQL Server
                server:
                  metadata:
                    label: Server
                    description: The server to connect to for this connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 1433
                database:
                  metadata:
                    label: Database
                    description: The database to connect to for this connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                retries:
                  metadata:
                    label: Retries
                    description: The number of automatic times to retry a query before
                      failing. Defaults to 1. Queries with syntax errors will not
                      be retried. This setting can be used to overcome intermittent
                      network issues.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 1
                login_timeout:
                  metadata:
                    label: Login timeout
                    description: The number of seconds used to establish a connection
                      before failing. Defaults to 0, which means that the timeout
                      is disabled or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                query_timeout:
                  metadata:
                    label: Query timeout
                    description: The number of seconds used to wait for a query before
                      failing. Defaults to 0, which means that the timeout is disabled
                      or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'FabricConnectionSchema(fields: schemas.adapters.fabric.connection_schema.FabricConnectionFields
            = FabricConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''fabric''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description=''The driver to use for this connection.'', field_type=''hidden'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''ODBC Driver 18
            for SQL Server''), server=TextField(metadata=TextFieldMetadata(label=''Server'',
            description=''The server to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=IntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database=TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The database to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries=IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=1), login_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), query_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0)), field_order: List[str] = <factory>)'
        FabricConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: fabric
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: The driver to use for this connection.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ODBC Driver 18 for SQL Server
            server:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server
                  description: The server to connect to for this connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 1433
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Database
                  description: The database to connect to for this connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            retries:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Retries
                  description: The number of automatic times to retry a query before
                    failing. Defaults to 1. Queries with syntax errors will not be
                    retried. This setting can be used to overcome intermittent network
                    issues.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 1
            login_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Login timeout
                  description: The number of seconds used to establish a connection
                    before failing. Defaults to 0, which means that the timeout is
                    disabled or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            query_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Query timeout
                  description: The number of seconds used to wait for a query before
                    failing. Defaults to 0, which means that the timeout is disabled
                    or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
          additionalProperties: false
          description: 'FabricConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''fabric''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description=''The
            driver to use for this connection.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''ODBC Driver 18
            for SQL Server''), server: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Server'',
            description=''The server to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.IntegerField
            = IntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The database to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries:
            schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=1), login_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), query_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_secret:
              oneOf:
              - type: string
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, github_webhook_id: Union[int, NoneType] = None, github_webhook_secret:
            Union[str, NoneType] = None, _github_webhook_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, pull_request_url_template: Union[PullRequestUrl, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, private_link_endpoint_id:
            Union[str, NoneType] = None, deploy_key: Union[Dict[Any, Any], NoneType]
            = None, github_repo: Union[str, NoneType] = None, name: Union[str, NoneType]
            = None, git_provider_id: Union[int, NoneType] = None, gitlab: Union[models.repository_gitlab.RepositoryGitlab,
            NoneType] = None, git_provider: Union[models.git_provider.GitProvider,
            NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - security_admin
              - billing_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            description:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            job_type:
              oneOf:
              - type: string
                enum:
                - ci
                - scheduled
                - other
              - type: 'null'
            triggers_on_draft_pr:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, description: Union[str, NoneType], generate_docs: bool,
            run_generate_sources: bool, state: int, dbt_version: Union[str, NoneType],
            raw_dbt_version: Union[str, NoneType] = None, id: Union[int, NoneType]
            = None, deactivated: bool = False, run_failure_count: int = 0, triggers:
            Union[models.job_definition.JobDefinitionTriggers, NoneType] = None, settings:
            Union[models.job_definition.JobDefinitionSettings, NoneType] = None, execution:
            Union[models.job_definition.JobDefinitionExecution, NoneType] = None,
            schedule: Union[models.job_definition.JobDefinitionSchedule, NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, execute_steps: Union[List[str],
            NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None, job_type: Union[common.constants.JobType, NoneType]
            = None, triggers_on_draft_pr: Union[bool, NoneType] = False)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
              description: The account the environment is associated with
            project_id:
              type: integer
              description: The project the environment is associated with
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The id of the associated credentials. Null for development
                environments.
            extended_attributes_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
              description: The name of the environment
            dbt_version:
              type: string
              default: 1.6.0-latest
              description: The default dbt Version to use for this environment
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
            is_deferrable:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
              description: The name of the project
            account_id:
              type: integer
              description: The account the project is associated with
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The active connection
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The active repository
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The active semantic layer configuration
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The job used for docs generation
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The job used for source freshness generation
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType] = None, repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.6.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: "\n    Represents a run of a job definition.\n    "
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            non_native_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            cause_category:
              oneOf:
              - type: string
                enum:
                - api
                - ci
                - scheduled
                - ui
                - rerun
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, non_native_pull_request_id: Union[int, NoneType] = None, schema_override:
            Union[str, NoneType] = None, dbt_version_override: Union[str, NoneType]
            = None, threads_override: Union[int, NoneType] = None, target_name_override:
            Union[str, NoneType] = None, generate_docs_override: Union[bool, NoneType]
            = None, timeout_seconds_override: Union[int, NoneType] = None, steps_override:
            Union[List[str], NoneType] = None, created_at: Union[datetime.datetime,
            NoneType] = None, cause_humanized: Union[str, NoneType] = None, job: Union[Dict[str,
            Any], NoneType] = None, cause_category: Union[common.constants.RunCauseCategory,
            NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_step_command:
              oneOf:
              - $ref: '#/definitions/RunStepCommand'
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, run_step_command: ''Optional[RunStepCommand]''
            = None)'
        RunStepCommand:
          type: object
          required:
          - run_step_id
          - dbt_command
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_step_id:
              type: integer
            dbt_command:
              type: string
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RunStepCommand(id: Union[int, NoneType], run_step_id: int,
            dbt_command: str, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            is_configured_for_oauth: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              oneOf:
              - type: boolean
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, is_configured_for_oauth:
            Union[bool, NoneType] = None, _refresh_token: Union[str, NoneType] = None,
            has_refresh_token: Union[bool, NoneType] = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - $ref: '#/definitions/SynapseCredentialsSchema'
              - $ref: '#/definitions/FabricCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            is_configured_for_oauth:
              type: boolean
              default: false
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, schemas.adapters.synapse.credentials_schema.SynapseCredentialsSchema,
            schemas.adapters.fabric.credentials_schema.FabricCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', is_configured_for_oauth:
            bool = False, adapter: ''Optional[models.dbt_adapter.DbtAdapter]'' = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                auth_type:
                  metadata:
                    label: Auth Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: Token
                      value: token
                    - label: OAuth
                      value: oauth
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: token
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on:
                      auth_type:
                      - token
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(auth_type=SelectField(metadata=SelectFieldMetadata(label=''Auth
            Method'', description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''Token'', value=''token''),
            SelectOption(label=''OAuth'', value=''oauth'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''token''), token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on={''auth_type'': [''token'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            auth_type:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Auth Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: Token
                    value: token
                  - label: OAuth
                    value: oauth
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: token
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on:
                    auth_type:
                    - token
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(auth_type: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Auth Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''Token'', value=''token''), SelectOption(label=''OAuth'',
            value=''oauth'')], validation=GenericTextValidation(min_length=None, max_length=None,
            required=True, pattern=None)), value=''token''), token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on={''auth_type'':
            [''token'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the Trino account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the Trino account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the Trino account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the Trino account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        SynapseCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/SynapseCredentialFields'
              default:
                authentication:
                  metadata:
                    label: Authentication
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: SQL
                      value: sql
                    - label: Active Directory Password
                      value: ActiveDirectoryPassword
                    - label: Service Principal
                      value: ServicePrincipal
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: sql
                user:
                  metadata:
                    label: User
                    description: The username of the Synapse account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - sql
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - sql
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                tenant_id:
                  metadata:
                    label: Tenant ID
                    description: The tenant ID of the Azure Active Directory instance.
                      This is only used when connecting to Azure SQL with a service
                      principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_id:
                  metadata:
                    label: Client ID
                    description: The client ID of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_secret:
                  metadata:
                    label: Client secret
                    description: The client secret of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema_authorization:
                  metadata:
                    label: Schema authorization
                    description: Optionally set this to the principal who should own
                      the schemas created by dbt.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'SynapseCredentialsSchema(fields: schemas.adapters.synapse.credentials_schema.SynapseCredentialFields
            = SynapseCredentialFields(authentication=SelectField(metadata=SelectFieldMetadata(label=''Authentication'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''SQL'', value=''sql''),
            SelectOption(label=''Active Directory Password'', value=''ActiveDirectoryPassword''),
            SelectOption(label=''Service Principal'', value=''ServicePrincipal'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''sql''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the Synapse account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id=TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id=TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret=TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema_authorization=TextField(metadata=TextFieldMetadata(label=''Schema
            authorization'', description=''Optionally set this to the principal who
            should own the schemas created by dbt.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=IntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        SynapseCredentialFields:
          type: object
          required: []
          properties:
            authentication:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Authentication
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: SQL
                    value: sql
                  - label: Active Directory Password
                    value: ActiveDirectoryPassword
                  - label: Service Principal
                    value: ServicePrincipal
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: sql
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the Synapse account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - sql
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - sql
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            tenant_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Tenant ID
                  description: The tenant ID of the Azure Active Directory instance.
                    This is only used when connecting to Azure SQL with a service
                    principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client ID
                  description: The client ID of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_secret:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client secret
                  description: The client secret of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema_authorization:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema authorization
                  description: Optionally set this to the principal who should own
                    the schemas created by dbt.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'SynapseCredentialFields(authentication: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Authentication'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''SQL'', value=''sql''), SelectOption(label=''Active
            Directory Password'', value=''ActiveDirectoryPassword''), SelectOption(label=''Service
            Principal'', value=''ServicePrincipal'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''sql''), user:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the Synapse account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema_authorization:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Schema
            authorization'', description=''Optionally set this to the principal who
            should own the schemas created by dbt.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.IntegerField
            = IntegerField(metadata=IntegerFieldMetadata(label=''Threads'', description=''The
            number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        FabricCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/FabricCredentialsFields'
              default:
                authentication:
                  metadata:
                    label: Authentication
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: Active Directory Password
                      value: ActiveDirectoryPassword
                    - label: Service Principal
                      value: ServicePrincipal
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ActiveDirectoryPassword
                user:
                  metadata:
                    label: User
                    description: The username of the Fabric account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                tenant_id:
                  metadata:
                    label: Tenant ID
                    description: The tenant ID of the Azure Active Directory instance.
                      This is only used when connecting to Azure SQL with a service
                      principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_id:
                  metadata:
                    label: Client ID
                    description: The client ID of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_secret:
                  metadata:
                    label: Client secret
                    description: The client secret of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema_authorization:
                  metadata:
                    label: Schema authorization
                    description: Optionally set this to the principal who should own
                      the schemas created by dbt.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'FabricCredentialsSchema(fields: schemas.adapters.fabric.credentials_schema.FabricCredentialsFields
            = FabricCredentialsFields(authentication=SelectField(metadata=SelectFieldMetadata(label=''Authentication'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''Active Directory Password'',
            value=''ActiveDirectoryPassword''), SelectOption(label=''Service Principal'',
            value=''ServicePrincipal'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''ActiveDirectoryPassword''),
            user=TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the Fabric account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id=TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id=TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret=TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema_authorization=TextField(metadata=TextFieldMetadata(label=''Schema
            authorization'', description=''Optionally set this to the principal who
            should own the schemas created by dbt.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=IntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        FabricCredentialsFields:
          type: object
          required: []
          properties:
            authentication:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Authentication
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: Active Directory Password
                    value: ActiveDirectoryPassword
                  - label: Service Principal
                    value: ServicePrincipal
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ActiveDirectoryPassword
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the Fabric account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            tenant_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Tenant ID
                  description: The tenant ID of the Azure Active Directory instance.
                    This is only used when connecting to Azure SQL with a service
                    principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client ID
                  description: The client ID of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_secret:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client secret
                  description: The client secret of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema_authorization:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema authorization
                  description: Optionally set this to the principal who should own
                    the schemas created by dbt.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'FabricCredentialsFields(authentication: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Authentication'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''Active Directory Password'', value=''ActiveDirectoryPassword''),
            SelectOption(label=''Service Principal'', value=''ServicePrincipal'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''ActiveDirectoryPassword''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the Fabric account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema_authorization: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema authorization'',
            description=''Optionally set this to the principal who should own the
            schemas created by dbt.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), target_name:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads:
            schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
              - synapse_v0
              - fabric_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: Union[int, NoneType], created_by_service_token_id:
            Union[int, NoneType], adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    ProjectEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectRequest:
      type: object
      required:
      - name
      - account_id
      properties:
        name:
          type: string
          description: The name of the project
        account_id:
          type: integer
          description: The account the project is associated with
        connection_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The active connection
        repository_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The active repository
        semantic_layer_config_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The active semantic layer configuration
        id:
          oneOf:
          - type: integer
          - type: 'null'
        skipped_setup:
          oneOf:
          - type: boolean
          - type: 'null'
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          oneOf:
          - type: string
          - type: 'null'
        docs_job_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The job used for docs generation
        freshness_job_id:
          oneOf:
          - type: integer
          - type: 'null'
          description: The job used for source freshness generation
      additionalProperties: false
      description: 'Project(name: str, account_id: int, connection_id: Union[int,
        NoneType] = None, repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
        Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state: int
        = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection: Union[models.connection.common.BaseConnectionV3,
        NoneType] = None, repository: Union[models.repository.RepositoryV3, NoneType]
        = None, group_permissions: Union[List[models.permissions.group_permission.GroupPermission],
        NoneType] = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id:
        Union[int, NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None)'
      definitions:
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
              description: The account the connection is associated with
            project_id:
              type: integer
              description: The project the connection is associated with
            name:
              type: string
              description: The name of the connection
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
              description: The account the connection is associated with
            connection_id:
              type: integer
              description: The connection to use the SSH tunnel with
            username:
              type: string
              description: SSH username
            port:
              type: integer
              description: SSH port
            hostname:
              type: string
              description: SSH hostname
            id:
              oneOf:
              - type: integer
              - type: 'null'
            public_key:
              oneOf:
              - type: string
              - type: 'null'
              description: SSH Public key
            private_key:
              oneOf:
              - type: string
              - type: 'null'
              description: SSH private key
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, id: Union[int, NoneType] = None,
            public_key: Union[str, NoneType] = None, private_key: Union[str, NoneType]
            = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, state: int = 1)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            is_configured_for_oauth: bool = False)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required: []
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
              - $ref: '#/definitions/SynapseConnectionSchema'
              - $ref: '#/definitions/FabricConnectionSchema'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema, schemas.adapters.synapse.connection_schema.SynapseConnectionSchema,
            schemas.adapters.fabric.connection_schema.FabricConnectionSchema, NoneType]
            = None, _encrypted_values: Union[Dict[str, models.encrypted_field.DataclassEncryptedField],
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, is_configured_for_oauth:
            bool = False)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                client_id:
                  metadata:
                    label: OAuth Client ID
                    description: Required to enable Databricks OAuth authentication
                      for IDE developers.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                client_secret:
                  metadata:
                    label: OAuth Client Secret
                    description: Required to enable Databricks OAuth authentication
                      for IDE developers.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''), client_id=TextField(metadata=TextFieldMetadata(label=''OAuth
            Client ID'', description=''Required to enable Databricks OAuth authentication
            for IDE developers.'', field_type=''text'', encrypt=True, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), client_secret=TextField(metadata=TextFieldMetadata(label=''OAuth
            Client Secret'', description=''Required to enable Databricks OAuth authentication
            for IDE developers.'', field_type=''text'', encrypt=True, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            client_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: OAuth Client ID
                  description: Required to enable Databricks OAuth authentication
                    for IDE developers.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            client_secret:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: OAuth Client Secret
                  description: Required to enable Databricks OAuth authentication
                    for IDE developers.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''), client_id: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''OAuth Client ID'', description=''Required
            to enable Databricks OAuth authentication for IDE developers.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), client_secret:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''OAuth
            Client Secret'', description=''Required to enable Databricks OAuth authentication
            for IDE developers.'', field_type=''text'', encrypt=True, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        SynapseConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/SynapseConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: synapse
                driver:
                  metadata:
                    label: Driver
                    description: The ODBC driver to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 1433
                database:
                  metadata:
                    label: Database
                    description: The name of the database.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                retries:
                  metadata:
                    label: Retries
                    description: The number of automatic times to retry a query before
                      failing. Defaults to 1. Queries with syntax errors will not
                      be retried. This setting can be used to overcome intermittent
                      network issues.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 1
                login_timeout:
                  metadata:
                    label: Login timeout
                    description: The number of seconds used to establish a connection
                      before failing. Defaults to 0, which means that the timeout
                      is disabled or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 0
                query_timeout:
                  metadata:
                    label: Query timeout
                    description: The number of seconds used to wait for a query before
                      failing. Defaults to 0, which means that the timeout is disabled
                      or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 0
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'SynapseConnectionSchema(fields: schemas.adapters.synapse.connection_schema.SynapseConnectionFields
            = SynapseConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''synapse''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description=''The ODBC driver to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=IntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database=TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The name of the database.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries=IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1), login_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0), query_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0)), field_order: List[str] = <factory>)'
        SynapseConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: synapse
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: The ODBC driver to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 1433
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Database
                  description: The name of the database.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            retries:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Retries
                  description: The number of automatic times to retry a query before
                    failing. Defaults to 1. Queries with syntax errors will not be
                    retried. This setting can be used to overcome intermittent network
                    issues.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 1
            login_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Login timeout
                  description: The number of seconds used to establish a connection
                    before failing. Defaults to 0, which means that the timeout is
                    disabled or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 0
            query_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Query timeout
                  description: The number of seconds used to wait for a query before
                    failing. Defaults to 0, which means that the timeout is disabled
                    or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 0
          additionalProperties: false
          description: 'SynapseConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''synapse''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description=''The
            ODBC driver to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Host'', description=''The
            hostname of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.IntegerField
            = IntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The name of the database.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries:
            schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1), login_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0), query_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=0))'
        IntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/IntegerFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'IntegerField(metadata: schemas.fields.IntegerField.IntegerFieldMetadata,
            value: int = None)'
        IntegerFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: number
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericIntegerValidation'
              default:
                required: false
          additionalProperties: false
          description: 'IntegerFieldMetadata(label: str, description: str, field_type:
            str = ''number'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.IntegerField.GenericIntegerValidation = GenericIntegerValidation(required=False))'
        GenericIntegerValidation:
          type: object
          required: []
          properties:
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
          additionalProperties: false
          description: 'GenericIntegerValidation(required: Union[bool, NoneType] =
            False)'
        FabricConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/FabricConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: fabric
                driver:
                  metadata:
                    label: Driver
                    description: The driver to use for this connection.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ODBC Driver 18 for SQL Server
                server:
                  metadata:
                    label: Server
                    description: The server to connect to for this connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 1433
                database:
                  metadata:
                    label: Database
                    description: The database to connect to for this connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                retries:
                  metadata:
                    label: Retries
                    description: The number of automatic times to retry a query before
                      failing. Defaults to 1. Queries with syntax errors will not
                      be retried. This setting can be used to overcome intermittent
                      network issues.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 1
                login_timeout:
                  metadata:
                    label: Login timeout
                    description: The number of seconds used to establish a connection
                      before failing. Defaults to 0, which means that the timeout
                      is disabled or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                query_timeout:
                  metadata:
                    label: Query timeout
                    description: The number of seconds used to wait for a query before
                      failing. Defaults to 0, which means that the timeout is disabled
                      or uses the default system settings.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'FabricConnectionSchema(fields: schemas.adapters.fabric.connection_schema.FabricConnectionFields
            = FabricConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''fabric''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description=''The driver to use for this connection.'', field_type=''hidden'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''ODBC Driver 18
            for SQL Server''), server=TextField(metadata=TextFieldMetadata(label=''Server'',
            description=''The server to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=IntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database=TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The database to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries=IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=1), login_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), query_timeout=IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0)), field_order: List[str] = <factory>)'
        FabricConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: fabric
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: The driver to use for this connection.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ODBC Driver 18 for SQL Server
            server:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server
                  description: The server to connect to for this connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 1433
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Database
                  description: The database to connect to for this connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            retries:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Retries
                  description: The number of automatic times to retry a query before
                    failing. Defaults to 1. Queries with syntax errors will not be
                    retried. This setting can be used to overcome intermittent network
                    issues.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 1
            login_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Login timeout
                  description: The number of seconds used to establish a connection
                    before failing. Defaults to 0, which means that the timeout is
                    disabled or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            query_timeout:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Query timeout
                  description: The number of seconds used to wait for a query before
                    failing. Defaults to 0, which means that the timeout is disabled
                    or uses the default system settings.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
          additionalProperties: false
          description: 'FabricConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''fabric''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description=''The
            driver to use for this connection.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''ODBC Driver 18
            for SQL Server''), server: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Server'',
            description=''The server to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.IntegerField
            = IntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=1433), database: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Database'',
            description=''The database to connect to for this connection.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), retries:
            schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Retries'',
            description=''The number of automatic times to retry a query before failing.
            Defaults to 1. Queries with syntax errors will not be retried. This setting
            can be used to overcome intermittent network issues.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=1), login_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Login
            timeout'', description=''The number of seconds used to establish a connection
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), query_timeout: schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Query
            timeout'', description=''The number of seconds used to wait for a query
            before failing. Defaults to 0, which means that the timeout is disabled
            or uses the default system settings.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_secret:
              oneOf:
              - type: string
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, github_webhook_id: Union[int, NoneType] = None, github_webhook_secret:
            Union[str, NoneType] = None, _github_webhook_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, pull_request_url_template: Union[PullRequestUrl, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, private_link_endpoint_id:
            Union[str, NoneType] = None, deploy_key: Union[Dict[Any, Any], NoneType]
            = None, github_repo: Union[str, NoneType] = None, name: Union[str, NoneType]
            = None, git_provider_id: Union[int, NoneType] = None, gitlab: Union[models.repository_gitlab.RepositoryGitlab,
            NoneType] = None, git_provider: Union[models.git_provider.GitProvider,
            NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - security_admin
              - billing_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            description:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            job_type:
              oneOf:
              - type: string
                enum:
                - ci
                - scheduled
                - other
              - type: 'null'
            triggers_on_draft_pr:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, description: Union[str, NoneType], generate_docs: bool,
            run_generate_sources: bool, state: int, dbt_version: Union[str, NoneType],
            raw_dbt_version: Union[str, NoneType] = None, id: Union[int, NoneType]
            = None, deactivated: bool = False, run_failure_count: int = 0, triggers:
            Union[models.job_definition.JobDefinitionTriggers, NoneType] = None, settings:
            Union[models.job_definition.JobDefinitionSettings, NoneType] = None, execution:
            Union[models.job_definition.JobDefinitionExecution, NoneType] = None,
            schedule: Union[models.job_definition.JobDefinitionSchedule, NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, execute_steps: Union[List[str],
            NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None, job_type: Union[common.constants.JobType, NoneType]
            = None, triggers_on_draft_pr: Union[bool, NoneType] = False)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
              description: The account the environment is associated with
            project_id:
              type: integer
              description: The project the environment is associated with
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The id of the associated credentials. Null for development
                environments.
            extended_attributes_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
              description: The name of the environment
            dbt_version:
              type: string
              default: 1.6.0-latest
              description: The default dbt Version to use for this environment
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
            is_deferrable:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
              description: The name of the project
            account_id:
              type: integer
              description: The account the project is associated with
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The active connection
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The active repository
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The active semantic layer configuration
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The job used for docs generation
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
              description: The job used for source freshness generation
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType] = None, repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.6.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: "\n    Represents a run of a job definition.\n    "
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            non_native_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            cause_category:
              oneOf:
              - type: string
                enum:
                - api
                - ci
                - scheduled
                - ui
                - rerun
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, non_native_pull_request_id: Union[int, NoneType] = None, schema_override:
            Union[str, NoneType] = None, dbt_version_override: Union[str, NoneType]
            = None, threads_override: Union[int, NoneType] = None, target_name_override:
            Union[str, NoneType] = None, generate_docs_override: Union[bool, NoneType]
            = None, timeout_seconds_override: Union[int, NoneType] = None, steps_override:
            Union[List[str], NoneType] = None, created_at: Union[datetime.datetime,
            NoneType] = None, cause_humanized: Union[str, NoneType] = None, job: Union[Dict[str,
            Any], NoneType] = None, cause_category: Union[common.constants.RunCauseCategory,
            NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_step_command:
              oneOf:
              - $ref: '#/definitions/RunStepCommand'
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, run_step_command: ''Optional[RunStepCommand]''
            = None)'
        RunStepCommand:
          type: object
          required:
          - run_step_id
          - dbt_command
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_step_id:
              type: integer
            dbt_command:
              type: string
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RunStepCommand(id: Union[int, NoneType], run_step_id: int,
            dbt_command: str, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            is_configured_for_oauth: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              oneOf:
              - type: boolean
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, is_configured_for_oauth:
            Union[bool, NoneType] = None, _refresh_token: Union[str, NoneType] = None,
            has_refresh_token: Union[bool, NoneType] = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - $ref: '#/definitions/SynapseCredentialsSchema'
              - $ref: '#/definitions/FabricCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            is_configured_for_oauth:
              type: boolean
              default: false
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, schemas.adapters.synapse.credentials_schema.SynapseCredentialsSchema,
            schemas.adapters.fabric.credentials_schema.FabricCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', is_configured_for_oauth:
            bool = False, adapter: ''Optional[models.dbt_adapter.DbtAdapter]'' = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                auth_type:
                  metadata:
                    label: Auth Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: Token
                      value: token
                    - label: OAuth
                      value: oauth
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: token
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on:
                      auth_type:
                      - token
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(auth_type=SelectField(metadata=SelectFieldMetadata(label=''Auth
            Method'', description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''Token'', value=''token''),
            SelectOption(label=''OAuth'', value=''oauth'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''token''), token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on={''auth_type'': [''token'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            auth_type:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Auth Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: Token
                    value: token
                  - label: OAuth
                    value: oauth
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: token
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on:
                    auth_type:
                    - token
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(auth_type: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Auth Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''Token'', value=''token''), SelectOption(label=''OAuth'',
            value=''oauth'')], validation=GenericTextValidation(min_length=None, max_length=None,
            required=True, pattern=None)), value=''token''), token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on={''auth_type'':
            [''token'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the Trino account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the Trino account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the Trino account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the Trino account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        SynapseCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/SynapseCredentialFields'
              default:
                authentication:
                  metadata:
                    label: Authentication
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: SQL
                      value: sql
                    - label: Active Directory Password
                      value: ActiveDirectoryPassword
                    - label: Service Principal
                      value: ServicePrincipal
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: sql
                user:
                  metadata:
                    label: User
                    description: The username of the Synapse account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - sql
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - sql
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                tenant_id:
                  metadata:
                    label: Tenant ID
                    description: The tenant ID of the Azure Active Directory instance.
                      This is only used when connecting to Azure SQL with a service
                      principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_id:
                  metadata:
                    label: Client ID
                    description: The client ID of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_secret:
                  metadata:
                    label: Client secret
                    description: The client secret of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema_authorization:
                  metadata:
                    label: Schema authorization
                    description: Optionally set this to the principal who should own
                      the schemas created by dbt.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'SynapseCredentialsSchema(fields: schemas.adapters.synapse.credentials_schema.SynapseCredentialFields
            = SynapseCredentialFields(authentication=SelectField(metadata=SelectFieldMetadata(label=''Authentication'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''SQL'', value=''sql''),
            SelectOption(label=''Active Directory Password'', value=''ActiveDirectoryPassword''),
            SelectOption(label=''Service Principal'', value=''ServicePrincipal'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''sql''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the Synapse account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id=TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id=TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret=TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema_authorization=TextField(metadata=TextFieldMetadata(label=''Schema
            authorization'', description=''Optionally set this to the principal who
            should own the schemas created by dbt.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=IntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        SynapseCredentialFields:
          type: object
          required: []
          properties:
            authentication:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Authentication
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: SQL
                    value: sql
                  - label: Active Directory Password
                    value: ActiveDirectoryPassword
                  - label: Service Principal
                    value: ServicePrincipal
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: sql
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the Synapse account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - sql
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - sql
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            tenant_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Tenant ID
                  description: The tenant ID of the Azure Active Directory instance.
                    This is only used when connecting to Azure SQL with a service
                    principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client ID
                  description: The client ID of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_secret:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client secret
                  description: The client secret of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema_authorization:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema authorization
                  description: Optionally set this to the principal who should own
                    the schemas created by dbt.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'SynapseCredentialFields(authentication: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Authentication'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''SQL'', value=''sql''), SelectOption(label=''Active
            Directory Password'', value=''ActiveDirectoryPassword''), SelectOption(label=''Service
            Principal'', value=''ServicePrincipal'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''sql''), user:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the Synapse account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''sql'', ''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema_authorization:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Schema
            authorization'', description=''Optionally set this to the principal who
            should own the schemas created by dbt.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.IntegerField
            = IntegerField(metadata=IntegerFieldMetadata(label=''Threads'', description=''The
            number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        FabricCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/FabricCredentialsFields'
              default:
                authentication:
                  metadata:
                    label: Authentication
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: Active Directory Password
                      value: ActiveDirectoryPassword
                    - label: Service Principal
                      value: ServicePrincipal
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ActiveDirectoryPassword
                user:
                  metadata:
                    label: User
                    description: The username of the Fabric account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - ActiveDirectoryPassword
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                tenant_id:
                  metadata:
                    label: Tenant ID
                    description: The tenant ID of the Azure Active Directory instance.
                      This is only used when connecting to Azure SQL with a service
                      principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_id:
                  metadata:
                    label: Client ID
                    description: The client ID of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: false
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                client_secret:
                  metadata:
                    label: Client secret
                    description: The client secret of the Azure Active Directory service
                      principal. This is only used when connecting to Azure SQL with
                      an AAD service principal.
                    field_type: text
                    encrypt: true
                    depends_on:
                      authentication:
                      - ServicePrincipal
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema_authorization:
                  metadata:
                    label: Schema authorization
                    description: Optionally set this to the principal who should own
                      the schemas created by dbt.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'FabricCredentialsSchema(fields: schemas.adapters.fabric.credentials_schema.FabricCredentialsFields
            = FabricCredentialsFields(authentication=SelectField(metadata=SelectFieldMetadata(label=''Authentication'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''Active Directory Password'',
            value=''ActiveDirectoryPassword''), SelectOption(label=''Service Principal'',
            value=''ServicePrincipal'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''ActiveDirectoryPassword''),
            user=TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the Fabric account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id=TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id=TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret=TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema_authorization=TextField(metadata=TextFieldMetadata(label=''Schema
            authorization'', description=''Optionally set this to the principal who
            should own the schemas created by dbt.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=IntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        FabricCredentialsFields:
          type: object
          required: []
          properties:
            authentication:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Authentication
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: Active Directory Password
                    value: ActiveDirectoryPassword
                  - label: Service Principal
                    value: ServicePrincipal
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ActiveDirectoryPassword
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the Fabric account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - ActiveDirectoryPassword
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            tenant_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Tenant ID
                  description: The tenant ID of the Azure Active Directory instance.
                    This is only used when connecting to Azure SQL with a service
                    principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_id:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client ID
                  description: The client ID of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: false
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            client_secret:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Client secret
                  description: The client secret of the Azure Active Directory service
                    principal. This is only used when connecting to Azure SQL with
                    an AAD service principal.
                  field_type: text
                  encrypt: true
                  depends_on:
                    authentication:
                    - ServicePrincipal
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema_authorization:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema authorization
                  description: Optionally set this to the principal who should own
                    the schemas created by dbt.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/IntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'FabricCredentialsFields(authentication: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Authentication'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''Active Directory Password'', value=''ActiveDirectoryPassword''),
            SelectOption(label=''Service Principal'', value=''ServicePrincipal'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''ActiveDirectoryPassword''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the Fabric account to connect to.'', field_type=''text'',
            encrypt=False, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on={''authentication'': [''ActiveDirectoryPassword'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), tenant_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Tenant
            ID'', description=''The tenant ID of the Azure Active Directory instance.
            This is only used when connecting to Azure SQL with a service principal.'',
            field_type=''text'', encrypt=False, depends_on={''authentication'': [''ServicePrincipal'']},
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_id:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            ID'', description=''The client ID of the Azure Active Directory service
            principal. This is only used when connecting to Azure SQL with an AAD
            service principal.'', field_type=''text'', encrypt=False, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), client_secret:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Client
            secret'', description=''The client secret of the Azure Active Directory
            service principal. This is only used when connecting to Azure SQL with
            an AAD service principal.'', field_type=''text'', encrypt=True, depends_on={''authentication'':
            [''ServicePrincipal'']}, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema_authorization: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema authorization'',
            description=''Optionally set this to the principal who should own the
            schemas created by dbt.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), target_name:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads:
            schemas.fields.IntegerField.IntegerField = IntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
              - synapse_v0
              - fabric_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: Union[int, NoneType], created_by_service_token_id:
            Union[int, NoneType], adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV2:
      type: object
      required:
      - id
      - account_id
      - full_name
      - remote_url
      - remote_backend
      - git_clone_strategy
      - deploy_key_id
      - github_installation_id
      - pull_request_url_template
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        full_name:
          oneOf:
          - type: 'null'
          - type: string
        remote_url:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
        remote_backend:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        deploy_key: {}
        deploy_key_id:
          oneOf:
          - type: 'null'
          - type: integer
        repository_credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_installation_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_webhook_id:
          oneOf:
          - type: 'null'
          - type: integer
        pull_request_url_template:
          oneOf:
          - type: 'null'
          - type: string
        state:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        git_provider_id:
          oneOf:
          - type: 'null'
          - type: integer
        private_link_endpoint_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV2Enveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryV2'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV2Request:
      type: object
      required:
      - id
      - account_id
      - full_name
      - remote_url
      - remote_backend
      - git_clone_strategy
      - deploy_key_id
      - github_installation_id
      - pull_request_url_template
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        full_name:
          oneOf:
          - type: 'null'
          - type: string
        remote_url:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
        remote_backend:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        deploy_key: {}
        deploy_key_id:
          oneOf:
          - type: 'null'
          - type: integer
        repository_credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_installation_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_webhook_id:
          oneOf:
          - type: 'null'
          - type: integer
        pull_request_url_template:
          oneOf:
          - type: 'null'
          - type: string
        state:
          type: integer
        git_provider_id:
          oneOf:
          - type: 'null'
          - type: integer
        private_link_endpoint_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Run:
      type: object
      required:
      - account_id
      - environment_id
      - project_id
      - job_definition_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        trigger_id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
          default: 1
        dbt_version:
          type: string
          default: 1.6.0-latest
        git_branch:
          oneOf:
          - type: string
          - type: 'null'
        git_sha:
          oneOf:
          - type: string
          - type: 'null'
        status_message:
          oneOf:
          - type: string
          - type: 'null'
        owner_thread_id:
          oneOf:
          - type: string
          - type: 'null'
        executed_by_thread_id:
          oneOf:
          - type: string
          - type: 'null'
        deferring_run_id:
          oneOf:
          - type: integer
          - type: 'null'
        artifacts_saved:
          type: boolean
          default: false
        artifact_s3_path:
          oneOf:
          - type: string
          - type: 'null'
        has_docs_generated:
          type: boolean
          default: false
        has_sources_generated:
          type: boolean
          default: false
        notifications_sent:
          type: boolean
          default: false
        blocked_by:
          type: array
          items:
            type: integer
          default: []
        scribe_enabled:
          type: boolean
          default: false
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        dequeued_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        started_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        finished_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        last_checked_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        last_heartbeat_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        should_start_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        trigger:
          oneOf:
          - $ref: '#/definitions/RunTrigger'
          - type: 'null'
          readOnly: true
        job:
          oneOf:
          - type: object
          - type: 'null'
          readOnly: true
        environment:
          oneOf:
          - type: object
          - type: 'null'
          readOnly: true
        run_steps:
          oneOf:
          - type: array
            items:
              $ref: '#/definitions/RunStep'
          - type: 'null'
          default: []
          readOnly: true
        status_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        in_progress:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_complete:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_success:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_error:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_cancelled:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        duration:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        queued_duration:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        run_duration:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        duration_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        queued_duration_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        run_duration_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        created_at_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        finished_at_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        job_id:
          oneOf:
          - type: integer
          - type: 'null'
          readOnly: true
        is_running:
          oneOf:
          - type: boolean
          - type: 'null'
      additionalProperties: false
      description: "\n    Represents a run of a job definition.\n    "
      definitions:
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            non_native_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            cause_category:
              oneOf:
              - type: string
                enum:
                - api
                - ci
                - scheduled
                - ui
                - rerun
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, non_native_pull_request_id: Union[int, NoneType] = None, schema_override:
            Union[str, NoneType] = None, dbt_version_override: Union[str, NoneType]
            = None, threads_override: Union[int, NoneType] = None, target_name_override:
            Union[str, NoneType] = None, generate_docs_override: Union[bool, NoneType]
            = None, timeout_seconds_override: Union[int, NoneType] = None, steps_override:
            Union[List[str], NoneType] = None, created_at: Union[datetime.datetime,
            NoneType] = None, cause_humanized: Union[str, NoneType] = None, job: Union[Dict[str,
            Any], NoneType] = None, cause_category: Union[common.constants.RunCauseCategory,
            NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_step_command:
              oneOf:
              - $ref: '#/definitions/RunStepCommand'
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, run_step_command: ''Optional[RunStepCommand]''
            = None)'
        RunStepCommand:
          type: object
          required:
          - run_step_id
          - dbt_command
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_step_id:
              type: integer
            dbt_command:
              type: string
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RunStepCommand(id: Union[int, NoneType], run_step_id: int,
            dbt_command: str, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    RunEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Run'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    Status:
      type: object
      properties:
        code:
          type: integer
          default: 200
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    TriggerRunRequestRequest:
      type: object
      required:
      - cause
      properties:
        cause:
          type: string
        git_sha:
          oneOf:
          - type: string
          - type: 'null'
        git_branch:
          oneOf:
          - type: string
          - type: 'null'
        azure_pull_request_id:
          oneOf:
          - type: integer
          - type: 'null'
        github_pull_request_id:
          oneOf:
          - type: integer
          - type: 'null'
        gitlab_merge_request_id:
          oneOf:
          - type: integer
          - type: 'null'
        non_native_pull_request_id:
          oneOf:
          - type: integer
          - type: 'null'
        schema_override:
          oneOf:
          - type: string
          - type: 'null'
        dbt_version_override:
          oneOf:
          - type: string
          - type: 'null'
        threads_override:
          oneOf:
          - type: integer
          - type: 'null'
        target_name_override:
          oneOf:
          - type: string
          - type: 'null'
        generate_docs_override:
          oneOf:
          - type: boolean
          - type: 'null'
        timeout_seconds_override:
          oneOf:
          - type: integer
          - type: 'null'
        steps_override:
          oneOf:
          - type: array
            items:
              type: string
          - type: 'null'
      additionalProperties: true
      description: "\n    Represents a request to trigger a run of a job definition.\n\
        \    "
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    User:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        auth0_database_user_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    UserEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserRequest:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        auth0_database_user_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Bearer
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
