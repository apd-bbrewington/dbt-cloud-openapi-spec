openapi: 3.0.3
info:
  title: dbt Cloud API v3
  version: 3.0.0
  description: "\n      # How to use this API\n\n      The dbt Cloud API is intended\
    \ for enqueuing runs from a job, polling for run progress,\n      and downloading\
    \ artifacts after jobs have completed running. Operational endpoints around\n\
    \      creating, modifying, and deleting _objects_ in dbt Cloud are still in flux.\
    \ These endpoints\n      are largely undocumented in API v2.\n\n      The API\
    \ docs are generated from an openapi spec defined in the\n      [dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec)\n\
    \      repository. If you find issues in these docs or have questions about using\
    \ the dbt Cloud\n      API, please open an issue in the dbt-cloud-openapi-spec\
    \ repo or contact support@getdbt.com.\n\n      # Authentication\n\n      To authenticate\
    \ an application with the dbt Cloud API, navigate to the\n      API Settings page\
    \ in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).\n    \
    \  If you cannot access this page, confirm that your dbt Cloud account has access\
    \ to the API,\n      and that you are using the hosted version of dbt Cloud. If\
    \ dbt Cloud is running inside of a VPC\n      in an Enterprise account, contact\
    \ your account manager for help finding your API key.\n      "
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
paths:
  /api/v3/accounts/:
    get:
      operationId: Retrieve Accounts
      tags:
      - Accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/assign-groups/:
    post:
      operationId: Create Assign Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Assign Groups
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/:
    get:
      operationId: Retrieve Audit Logs
      description: Fetch paginated audit log events.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/download/:
    get:
      operationId: Retrieve Audit Logs Download
      description: Generate audit log CSV
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/export/:
    get:
      operationId: Retrieve Audit Logs Export
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Audit Logs Export
      description: Submit a bulk export request.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/export/{job_id}/download/:
    get:
      operationId: Retrieve Audit Logs Export Download
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: string
        required: true
      tags:
      - Audit Logs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/filtering-options/:
    get:
      operationId: Retrieve Audit Logs Filtering Options
      description: Fetch filtering typeahead options for the given account
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/auth-provider/:
    get:
      operationId: List Auth Provider
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: account_id__in
        schema:
          type: array
      - in: query
        name: azure_auth_provider__domains__contains
        schema:
          type: array
      - in: query
        name: gsuite_auth_provider__domains__contains
        schema:
          type: array
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: saml_auth_provider__entity_id
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Auth Provider
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseAuthProvider'
          description: ''
    post:
      operationId: Create Auth Provider
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Auth Provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAuthProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseAuthProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseAuthProviderRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseAuthProvider'
          description: ''
  /api/v3/accounts/{account_id}/auth-provider/{id}/:
    get:
      operationId: Retrieve Auth Provider
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: account_id__in
        schema:
          type: array
      - in: query
        name: azure_auth_provider__domains__contains
        schema:
          type: array
      - in: query
        name: gsuite_auth_provider__domains__contains
        schema:
          type: array
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: saml_auth_provider__entity_id
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Auth Provider
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAuthProvider'
          description: ''
    post:
      operationId: Update Auth Provider
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Auth Provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAuthProviderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseAuthProviderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseAuthProviderRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAuthProvider'
          description: ''
    delete:
      operationId: Destroy Auth Provider
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: account_id__in
        schema:
          type: array
      - in: query
        name: azure_auth_provider__domains__contains
        schema:
          type: array
      - in: query
        name: gsuite_auth_provider__domains__contains
        schema:
          type: array
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: saml_auth_provider__entity_id
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Auth Provider
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/azure-ad-applications/:
    get:
      operationId: List Azure Ad Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: organization_name
        schema:
          type: string
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Azure Ad Applications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountAzureActiveDirectoryApplication'
          description: ''
    post:
      operationId: Create Azure Ad Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Azure Ad Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAzureActiveDirectoryApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountAzureActiveDirectoryApplicationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountAzureActiveDirectoryApplicationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountAzureActiveDirectoryApplication'
          description: ''
  /api/v3/accounts/{account_id}/azure-ad-applications/{id}/:
    get:
      operationId: Retrieve Azure Ad Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: organization_name
        schema:
          type: string
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Azure Ad Applications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAzureActiveDirectoryApplication'
          description: ''
    post:
      operationId: Update Azure Ad Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Azure Ad Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAzureActiveDirectoryApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountAzureActiveDirectoryApplicationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountAzureActiveDirectoryApplicationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAzureActiveDirectoryApplication'
          description: ''
    delete:
      operationId: Destroy Azure Ad Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: organization_name
        schema:
          type: string
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Azure Ad Applications
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/connections/test/:
    post:
      operationId: Create Connections Test
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/connections/test/{workflow_id}:
    get:
      operationId: Retrieve Connections Test
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: workflow_id
        schema:
          type: string
        required: true
      tags:
      - Connections
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/credentials/:
    get:
      operationId: List Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/credentials/{id}/:
    get:
      operationId: Retrieve Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Update Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/develop/{develop_request_id}/knowledge/dag:
    get:
      operationId: Retrieve Develop Knowledge Dag
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: develop_request_id
        schema:
          type: integer
        required: true
      tags:
      - Develop
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/develop/{develop_request_id}/knowledge/format:
    get:
      operationId: Retrieve Develop Knowledge Format
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: develop_request_id
        schema:
          type: integer
        required: true
      tags:
      - Develop
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Develop Knowledge Format
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: develop_request_id
        schema:
          type: integer
        required: true
      tags:
      - Develop
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/develop/{develop_request_id}/knowledge/manifest:
    get:
      operationId: Retrieve Develop Knowledge Manifest
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: develop_request_id
        schema:
          type: integer
        required: true
      tags:
      - Develop
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/environments/:
    get:
      operationId: List Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3'
          description: ''
    post:
      operationId: Create Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3'
          description: ''
  /api/v3/accounts/{account_id}/environments/{environment_id}/semantic-layer-configs/:
    get:
      operationId: List Environments Semantic Layer Configs
      parameters:
      - in: query
        name: account
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: account_id__in
        schema:
          type: array
      - in: query
        name: enabled
        schema:
          type: boolean
      - in: path
        name: environment_id
        schema:
          type: integer
        required: true
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: environment_id__in
        schema:
          type: array
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: target_name
        schema:
          type: string
      tags:
      - Environments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegacySemanticLayerConfig'
          description: ''
    post:
      operationId: Create Environments Semantic Layer Configs
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: environment_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacySemanticLayerConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LegacySemanticLayerConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LegacySemanticLayerConfigRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegacySemanticLayerConfig'
          description: ''
  /api/v3/accounts/{account_id}/environments/{environment_id}/semantic-layer-configs/{id}/:
    get:
      operationId: Retrieve Environments Semantic Layer Configs
      parameters:
      - in: query
        name: account
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: account_id__in
        schema:
          type: array
      - in: query
        name: enabled
        schema:
          type: boolean
      - in: path
        name: environment_id
        schema:
          type: integer
        required: true
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: environment_id__in
        schema:
          type: array
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: target_name
        schema:
          type: string
      tags:
      - Environments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacySemanticLayerConfig'
          description: ''
    post:
      operationId: Update Environments Semantic Layer Configs
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: environment_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacySemanticLayerConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LegacySemanticLayerConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LegacySemanticLayerConfigRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacySemanticLayerConfig'
          description: ''
    delete:
      operationId: Destroy Environments Semantic Layer Configs
      parameters:
      - in: query
        name: account
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: account_id__in
        schema:
          type: array
      - in: query
        name: enabled
        schema:
          type: boolean
      - in: path
        name: environment_id
        schema:
          type: integer
        required: true
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: environment_id__in
        schema:
          type: array
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: target_name
        schema:
          type: string
      tags:
      - Environments
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/environments/{id}/:
    get:
      operationId: Retrieve Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3'
          description: ''
    post:
      operationId: Update Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3'
          description: ''
    delete:
      operationId: Destroy Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/gitlab-applications/:
    get:
      operationId: List Gitlab Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Gitlab Applications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountGitlabApplication'
          description: ''
    post:
      operationId: Create Gitlab Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Gitlab Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGitlabApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountGitlabApplicationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountGitlabApplicationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountGitlabApplication'
          description: ''
  /api/v3/accounts/{account_id}/gitlab-applications/{id}/:
    get:
      operationId: Retrieve Gitlab Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Gitlab Applications
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGitlabApplication'
          description: ''
    post:
      operationId: Update Gitlab Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Gitlab Applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGitlabApplicationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountGitlabApplicationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountGitlabApplicationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGitlabApplication'
          description: ''
    delete:
      operationId: Destroy Gitlab Applications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Gitlab Applications
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/group-permissions/{group_id}/:
    post:
      operationId: Create Group Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - Group Permissions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/groups/:
    get:
      operationId: List Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Groups
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
    post:
      operationId: Create Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
  /api/v3/accounts/{account_id}/groups/{id}/:
    get:
      operationId: Retrieve Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Groups
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    post:
      operationId: Update Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v3/accounts/{account_id}/invites/:
    post:
      operationId: Create Invites
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/ip-restrictions/:
    get:
      operationId: Retrieve Ip Restrictions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Ip Restrictions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: Update Ip Restrictions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Ip Restrictions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/ip-restrictions-set/:
    post:
      operationId: Create Ip Restrictions Set
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions Set
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/ip-restrictions-set/{id}/validate/:
    get:
      operationId: Retrieve Ip Restrictions Set Validate
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions Set
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/ip-restrictions-set/{id}/validate/{rule_id}:
    get:
      operationId: Retrieve Ip Restrictions Set Validate_2
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: rule_id
        schema:
          type: integer
        required: true
      tags:
      - Ip Restrictions Set
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/ip-restrictions/{id}:
    get:
      operationId: Retrieve Ip Restrictions_2
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Ip Restrictions_2
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: Update Ip Restrictions_2
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Ip Restrictions_2
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Ip Restrictions
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/license-maps/:
    get:
      operationId: List License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseMap'
          description: ''
    post:
      operationId: Create License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseMap'
          description: ''
  /api/v3/accounts/{account_id}/license-maps/{id}/:
    get:
      operationId: Retrieve License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMap'
          description: ''
    post:
      operationId: Update License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMap'
          description: ''
    delete:
      operationId: Destroy License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/private-link-endpoints/:
    get:
      operationId: Retrieve Private Link Endpoints
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Private Link Endpoints
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: Create Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
  /api/v3/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: Update Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: Destroy Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/adapters/:
    get:
      operationId: List Projects Adapters
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Adapters
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbtAdapter'
          description: ''
    post:
      operationId: Create Projects Adapters
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Adapters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbtAdapter'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/adapters/{id}/:
    get:
      operationId: Retrieve Projects Adapters
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Adapters
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapter'
          description: ''
    post:
      operationId: Update Projects Adapters
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Adapters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapter'
          description: ''
    delete:
      operationId: Destroy Projects Adapters
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Adapters
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/connections/:
    get:
      operationId: List Projects Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Connections
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionV3'
          description: ''
    post:
      operationId: Create Projects Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionV3'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/connections/{id}/:
    get:
      operationId: Retrieve Projects Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Connections
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3'
          description: ''
    post:
      operationId: Update Projects Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3'
          description: ''
    delete:
      operationId: Destroy Projects Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Connections
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/credentials/:
    get:
      operationId: List Projects Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Projects Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/credentials/{id}/:
    get:
      operationId: Retrieve Projects Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Update Projects Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: Partial Update Projects Credentials
      description: |-
        Overriding the default patch behavior is primarily motivated by the DbtAdapterCredentials model.
        This model stores its credential values in nested json fields and that requires us to patch with
        bespoke merge logic
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Projects Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Credentials
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/:
    post:
      operationId: Create Projects Environment Variables
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariable'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/{id}/:
    post:
      operationId: Update Projects Environment Variables
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariable'
          description: ''
    delete:
      operationId: Destroy Projects Environment Variables
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/bulk/:
    post:
      operationId: Create Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: Update Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/environment/:
    get:
      operationId: List Projects Environment Variables Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariable'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/job/:
    get:
      operationId: List Projects Environment Variables Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariable'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/user/:
    get:
      operationId: List Projects Environment Variables User
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Projects Environment Variables
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariable'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environments/:
    get:
      operationId: List Projects Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Projects Environments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3'
          description: ''
    post:
      operationId: Create Projects Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environments/{id}/:
    get:
      operationId: Retrieve Projects Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Projects Environments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3'
          description: ''
    post:
      operationId: Update Projects Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3'
          description: ''
    delete:
      operationId: Destroy Projects Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Projects Environments
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/group-permissions/:
    post:
      operationId: Create Projects Group Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Group Permissions
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/jobs/{job_definition_id}/codex-token/:
    get:
      operationId: Retrieve Projects Jobs Codex Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_definition_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Jobs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/jobs/{job_definition_id}/exposure-tile/:
    get:
      operationId: Retrieve Projects Jobs Exposure Tile
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_definition_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Jobs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/managed-repositories/:
    post:
      operationId: Create Projects Managed Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Managed Repositories
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/repositories/:
    get:
      operationId: List Projects Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Repositories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV3'
          description: ''
    post:
      operationId: Create Projects Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV3'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/repositories/{id}/:
    get:
      operationId: Retrieve Projects Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Repositories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3'
          description: ''
    post:
      operationId: Update Projects Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3'
          description: ''
    delete:
      operationId: Destroy Projects Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Repositories
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/runs/{run_id}/timing/:
    get:
      operationId: Retrieve Projects Runs Timing
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Runs
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/semantic-layer-configurations/:
    get:
      operationId: List Projects Semantic Layer Configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Semantic Layer Configurations
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemanticLayerConfig'
          description: ''
    post:
      operationId: Create Projects Semantic Layer Configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Semantic Layer Configurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemanticLayerConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemanticLayerConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemanticLayerConfigRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemanticLayerConfig'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/semantic-layer-configurations/{id}/:
    get:
      operationId: Retrieve Projects Semantic Layer Configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Semantic Layer Configurations
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticLayerConfig'
          description: ''
    post:
      operationId: Update Projects Semantic Layer Configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Semantic Layer Configurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemanticLayerConfigRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemanticLayerConfigRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemanticLayerConfigRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticLayerConfig'
          description: ''
    delete:
      operationId: Destroy Projects Semantic Layer Configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Semantic Layer Configurations
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/semantic-layer-credentials/:
    post:
      operationId: Create Semantic Layer Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Semantic Layer Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemanticLayerCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemanticLayerCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemanticLayerCredentialsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemanticLayerCredentials'
          description: ''
  /api/v3/accounts/{account_id}/semantic-layer-credentials/{id}/:
    get:
      operationId: Retrieve Semantic Layer Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Semantic Layer Credentials
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticLayerCredentials'
          description: ''
    post:
      operationId: Update Semantic Layer Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Semantic Layer Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemanticLayerCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SemanticLayerCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SemanticLayerCredentialsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticLayerCredentials'
          description: ''
    patch:
      operationId: Partial Update Semantic Layer Credentials
      description: Overriding the default patch behavior is necessary since we have
        to handle JSON blob merge as opposed to normal model merge
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Semantic Layer Credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSemanticLayerCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSemanticLayerCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSemanticLayerCredentialsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SemanticLayerCredentials'
          description: ''
    delete:
      operationId: Destroy Semantic Layer Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Semantic Layer Credentials
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/service-tokens/:
    get:
      operationId: Retrieve Service Tokens
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Service Tokens
      description: This route is used for generating a new service account token.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/service-tokens/{id}/:
    get:
      operationId: Retrieve Service Tokens_2
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: Update Service Tokens
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Service Tokens
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/service-tokens/{service_token_id}/permissions/:
    get:
      operationId: Retrieve Service Tokens Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: service_token_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Service Tokens Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: service_token_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/sso-reauth/:
    get:
      operationId: Retrieve Sso Reauth
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Sso Reauth
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/users/:
    get:
      operationId: Retrieve Users
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/event/{event_id}:
    get:
      operationId: Retrieve Webhooks Event
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/event/{event_id}/receipts:
    get:
      operationId: Retrieve Webhooks Event Receipts
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/receipt/{receipt_id}:
    get:
      operationId: Retrieve Webhooks Receipt
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: receipt_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}:
    get:
      operationId: Retrieve Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: Update Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}/events:
    get:
      operationId: Retrieve Webhooks Subscription Events
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}/test:
    get:
      operationId: Retrieve Webhooks Subscription Test
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/subscriptions:
    get:
      operationId: Retrieve Webhooks Subscriptions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Webhooks Subscriptions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/adapter-schema/:
    get:
      operationId: Retrieve Adapter Schema
      tags:
      - Adapter Schema
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/change-password/:
    post:
      operationId: Create Change Password
      tags:
      - Change Password
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/databricks-partner-connect-signup/:
    get:
      operationId: Retrieve Databricks Partner Connect Signup
      tags:
      - Databricks Partner Connect Signup
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Databricks Partner Connect Signup
      description: |-
        Given a Databricks Partner Connect token:
            - verify that the token is valid
            - update the user's password
            - update the account's name
            - accept the terms of service
            - invalidate the token
            - if it's a new user, auto verify their email and
              log them in automatically

        If any errors occur while trying to update the necessary database records,
        the transaction will be rolled back.
      tags:
      - Databricks Partner Connect Signup
      responses:
        '200':
          description: No response body
  /api/v3/git-provider/disconnect/:
    post:
      operationId: Create Git Provider Disconnect
      description: |-
        This endpoint receives requests from the Profile integration page
        and removes the specified UserSocialAuth record associated with
        this user.

        Receieves GitProviderDisconnectRequest as a payload.
      tags:
      - Git Provider
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/git-provider/webhook/register/:
    post:
      operationId: Create Git Provider Webhook Register
      description: |-
        This endpoint receives webhook payloads from our supported
        git providers and persists the information in our DB.
      tags:
      - Git Provider
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/azure-ad/projects/:
    get:
      operationId: Retrieve Integrations Azure Ad Projects
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/azure-ad/projects/{azure_project_id}/repositories/:
    get:
      operationId: Retrieve Integrations Azure Ad Projects Repositories
      parameters:
      - in: path
        name: azure_project_id
        schema:
          type: string
        required: true
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/azure-ad/service-user/:
    get:
      operationId: Retrieve Integrations Azure Ad Service User
      description: |-
        This endpoint receives a request from the Azure service user UI and returns
        details about the configured user, if one has been connected.
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/azure-ad/service-user/disconnect/:
    post:
      operationId: Create Integrations Azure Ad Service User Disconnect
      description: |-
        This endpoint receives a request from the Azure service user settings UI
        and removes the specified record from the 'azure_service_user_oauth' table.
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/gitlab/disconnect/:
    post:
      operationId: Create Integrations Gitlab Disconnect
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/gitlab/groups/:
    get:
      operationId: Retrieve Integrations Gitlab Groups
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/integrations/gitlab/groups/{group_id}/projects/:
    get:
      operationId: Retrieve Integrations Gitlab Groups Projects
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - Integrations
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/redeem-reset-password/:
    get:
      operationId: Retrieve Redeem Reset Password
      tags:
      - Redeem Reset Password
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Redeem Reset Password
      tags:
      - Redeem Reset Password
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/server/user/{user_id}/environment/{environment_id}/{path}:
    get:
      operationId: Retrieve Server User Environment
      parameters:
      - in: path
        name: environment_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: path
        schema:
          type: string
          pattern: ^.*$
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - Server
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Server User Environment
      parameters:
      - in: path
        name: environment_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: path
        schema:
          type: string
          pattern: ^.*$
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - Server
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Server User Environment
      parameters:
      - in: path
        name: environment_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: path
        schema:
          type: string
          pattern: ^.*$
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - Server
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/snowflake-partner-connect-signup/:
    get:
      operationId: Retrieve Snowflake Partner Connect Signup
      tags:
      - Snowflake Partner Connect Signup
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Snowflake Partner Connect Signup
      description: |-
        Given a Partner Connect token:
            - verify that the token is valid
            - update the user's password
            - update the account's name
            - accept the terms of service
            - invalidate the token
            - if it's a new user, auto verify their email and
              log them in automatically

        If any errors occur while trying to update the necessary database records,
        the transaction will be rolled back.
      tags:
      - Snowflake Partner Connect Signup
      responses:
        '200':
          description: No response body
  /api/v3/user-preferences/:
    get:
      operationId: Retrieve User Preferences
      description: Fetch the user's preferences
      tags:
      - User Preferences
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create User Preferences
      description: Set the specified user preference values
      tags:
      - User Preferences
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/users/{user_id}/credentials/:
    get:
      operationId: List Users Credentials
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentials'
          description: ''
    post:
      operationId: Create Users Credentials
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentials'
          description: ''
  /api/v3/users/{user_id}/credentials/{id}/:
    get:
      operationId: Retrieve Users Credentials
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: ''
    post:
      operationId: Update Users Credentials
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: ''
    delete:
      operationId: Destroy Users Credentials
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v3/users/{user_id}/user-social-auth/:
    get:
      operationId: List Users User Social Auth
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: provider
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/users/{user_id}/user-social-auth/{id}/:
    get:
      operationId: Retrieve Users User Social Auth
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: provider
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v3/whats-new/:
    get:
      operationId: Retrieve Whats New
      description: Returns an array representing all the yaml file entries in the
        whats new directory
      tags:
      - Whats New
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Whats New
      description: Updates the `viewed` state of whats new entries for the current
        user
      tags:
      - Whats New
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AccountAzureActiveDirectoryApplication:
      type: object
      required:
      - account_id
      properties:
        account_id:
          type: integer
        organization_name:
          oneOf:
          - type: string
          - type: 'null'
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
        id:
          oneOf:
          - type: integer
          - type: 'null'
          readOnly: true
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: "\n    This model represents information about an account's Azure\
        \ Active Directory\n    application, which we use for configuring DevOps'\
        \ OAuth flow.\n    "
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AccountAzureActiveDirectoryApplicationRequest:
      type: object
      required:
      - account_id
      properties:
        account_id:
          type: integer
        organization_name:
          oneOf:
          - type: string
          - type: 'null'
        tenant_id:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
        client_id:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
        client_secret:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
      additionalProperties: false
      description: "\n    This model represents information about an account's Azure\
        \ Active Directory\n    application, which we use for configuring DevOps'\
        \ OAuth flow.\n    "
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AccountGitlabApplication:
      type: object
      required:
      - account_id
      - gitlab_url
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        gitlab_url:
          type: string
        auth_url:
          oneOf:
          - type: string
          - type: 'null'
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'AccountGitlabApplication(id: Union[int, NoneType], account_id:
        int, gitlab_url: str, auth_url: Union[str, NoneType] = None, application_id:
        Union[str, NoneType] = None, _application_id: Union[models.encrypted_field.DataclassEncryptedField,
        NoneType] = None, secret: Union[str, NoneType] = None, _secret: Union[models.encrypted_field.DataclassEncryptedField,
        NoneType] = None, state: Union[int, NoneType] = 1, created_at: Union[datetime.datetime,
        NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AccountGitlabApplicationRequest:
      type: object
      required:
      - account_id
      - gitlab_url
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        gitlab_url:
          type: string
        auth_url:
          oneOf:
          - type: string
          - type: 'null'
        application_id:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
        secret:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
      additionalProperties: false
      description: 'AccountGitlabApplication(id: Union[int, NoneType], account_id:
        int, gitlab_url: str, auth_url: Union[str, NoneType] = None, application_id:
        Union[str, NoneType] = None, _application_id: Union[models.encrypted_field.DataclassEncryptedField,
        NoneType] = None, secret: Union[str, NoneType] = None, _secret: Union[models.encrypted_field.DataclassEncryptedField,
        NoneType] = None, state: Union[int, NoneType] = 1, created_at: Union[datetime.datetime,
        NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AdapterVersionEnum:
      type: string
      enum:
      - apache_spark_v0
      - databricks_spark_v0
      - databricks_v0
      - trino_v0
      - snowflake_v0
      - bigquery_v0
      - postgres_v0
      - redshift_v0
    BaseAuthProvider:
      type: object
      required:
      - account_id
      - type
      - slug
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        type:
          $ref: '#/components/schemas/BaseAuthProviderTypeEnum'
        slug:
          type: string
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        login_url:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'BaseAuthProvider(id: Union[int, NoneType], account_id: int, type:
        models.auth_provider.common.AuthProviderType, slug: str, state: int = 1, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, login_url: Union[str, NoneType] = None, auth0_connection_id:
        Union[str, NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseAuthProviderRequest:
      type: object
      required:
      - account_id
      - type
      - slug
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        type:
          $ref: '#/components/schemas/BaseAuthProviderTypeEnum'
        slug:
          type: string
        state:
          type: integer
          default: 1
        auth0_connection_id:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
      additionalProperties: false
      description: 'BaseAuthProvider(id: Union[int, NoneType], account_id: int, type:
        models.auth_provider.common.AuthProviderType, slug: str, state: int = 1, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, login_url: Union[str, NoneType] = None, auth0_connection_id:
        Union[str, NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseAuthProviderTypeEnum:
      type: string
      enum:
      - saml
      - okta
      - gsuite
      - azure_single_tenant
      - azure_multi_tenant
      - azure_active_directory
      - azure_active_directory_service_user
    BaseConnectionV3:
      type: object
      required:
      - account_id
      - project_id
      - name
      - type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/BaseConnectionV3TypeEnum'
        created_by_id:
          oneOf:
          - type: integer
          - type: 'null'
        created_by_service_token_id:
          oneOf:
          - type: integer
          - type: 'null'
        details:
          oneOf:
          - oneOf:
            - $ref: '#/definitions/PostgresConnectionV3'
            - $ref: '#/definitions/SnowflakeConnectionV3'
            - $ref: '#/definitions/BigqueryConnectionV3'
            - $ref: '#/definitions/DbtAdapterConnection'
          - type: 'null'
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        private_link_endpoint_id:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int, project_id:
        int, name: str, type: models.connection.common.ConnectionType, created_by_id:
        Union[int, NoneType] = None, created_by_service_token_id: Union[int, NoneType]
        = None, details: Union[ForwardRef(''AnyConnection''), NoneType] = None, state:
        int = 1, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, private_link_endpoint_id: Union[str,
        NoneType] = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              $ref: '#/components/schemas/BaseConnectionV3TypeEnum'
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnectionV3Request:
      type: object
      required:
      - account_id
      - project_id
      - name
      - type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/BaseConnectionV3TypeEnum'
        created_by_id:
          oneOf:
          - type: integer
          - type: 'null'
        created_by_service_token_id:
          oneOf:
          - type: integer
          - type: 'null'
        details:
          oneOf:
          - oneOf:
            - $ref: '#/definitions/PostgresConnectionV3'
            - $ref: '#/definitions/SnowflakeConnectionV3'
            - $ref: '#/definitions/BigqueryConnectionV3'
            - $ref: '#/definitions/DbtAdapterConnection'
          - type: 'null'
        state:
          type: integer
          default: 1
        private_link_endpoint_id:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int, project_id:
        int, name: str, type: models.connection.common.ConnectionType, created_by_id:
        Union[int, NoneType] = None, created_by_service_token_id: Union[int, NoneType]
        = None, details: Union[ForwardRef(''AnyConnection''), NoneType] = None, state:
        int = 1, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, private_link_endpoint_id: Union[str,
        NoneType] = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              $ref: '#/components/schemas/BaseConnectionV3TypeEnum'
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnectionV3TypeEnum:
      type: string
      enum:
      - postgres
      - redshift
      - snowflake
      - bigquery
      - adapter
    CustomEnvironmentVariable:
      type: object
      required:
      - account_id
      - project_id
      - name
      - type
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
        user_id:
          oneOf:
          - type: integer
          - type: 'null'
        environment_id:
          oneOf:
          - type: integer
          - type: 'null'
        job_definition_id:
          oneOf:
          - type: integer
          - type: 'null'
        environment:
          oneOf:
          - $ref: '#/definitions/EnvironmentV3'
          - type: 'null'
          readOnly: true
        display_value:
          oneOf:
          - type: string
          - type: 'null'
        id:
          oneOf:
          - type: integer
          - type: 'null'
          readOnly: true
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: "\n    This model represents a user-defined environment variable,\
        \ which can be\n    set on the account, job or user-level and leveraged in\
        \ both the IDE and\n    scheduled Runs.\n    "
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
              readOnly: true
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
              readOnly: true
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    CustomEnvironmentVariableRequest:
      type: object
      required:
      - account_id
      - project_id
      - name
      - type
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
        user_id:
          oneOf:
          - type: integer
          - type: 'null'
        environment_id:
          oneOf:
          - type: integer
          - type: 'null'
        job_definition_id:
          oneOf:
          - type: integer
          - type: 'null'
        raw_value:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
        display_value:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      description: "\n    This model represents a user-defined environment variable,\
        \ which can be\n    set on the account, job or user-level and leveraged in\
        \ both the IDE and\n    scheduled Runs.\n    "
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
              writeOnly: true
            display_value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    CustomEnvironmentVariableTypeEnum:
      type: string
      enum:
      - project
      - environment
      - job
      - user
    DbtAdapter:
      type: object
      required:
      - account_id
      - project_id
      - created_by_id
      - adapter_version
      - metadata_json
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        created_by_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        metadata_json:
          type: object
          additionalProperties:
            type: string
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
        int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
        metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
        NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              $ref: '#/components/schemas/AdapterVersionEnum'
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    DbtAdapterRequest:
      type: object
      required:
      - account_id
      - project_id
      - created_by_id
      - adapter_version
      - metadata_json
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        created_by_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        metadata_json:
          type: object
          additionalProperties:
            type: string
        state:
          type: integer
          default: 1
      additionalProperties: false
      description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
        int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
        metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
        NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              $ref: '#/components/schemas/AdapterVersionEnum'
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    EnvironmentV3:
      type: object
      required:
      - account_id
      - project_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          oneOf:
          - type: integer
          - type: 'null'
        name:
          type: string
          default: New Environment
        dbt_version:
          type: string
          default: 1.4.0-latest
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/EnvironmentV3TypeEnum'
          default: deployment
        use_custom_branch:
          type: boolean
          default: false
        custom_branch:
          oneOf:
          - type: string
          - type: 'null'
        supports_docs:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        project:
          oneOf:
          - $ref: '#/definitions/Project'
          - type: 'null'
          readOnly: true
        jobs:
          oneOf:
          - type: array
            items:
              type: object
              additionalProperties:
                oneOf:
                - $ref: '#/definitions/Run'
                - type: 'null'
          - type: 'null'
          readOnly: true
        credentials:
          oneOf:
          - $ref: '#/definitions/PostgresCredentials'
          - $ref: '#/definitions/RedshiftCredentials'
          - $ref: '#/definitions/SnowflakeCredentials'
          - $ref: '#/definitions/BigqueryCredentials'
          - $ref: '#/definitions/DbtAdapterCredentials'
          - type: 'null'
          readOnly: true
        custom_environment_variables:
          oneOf:
          - type: array
            items:
              $ref: '#/definitions/CustomEnvironmentVariable'
          - type: 'null'
          readOnly: true
        deployment_type:
          oneOf:
          - type: string
            enum:
            - production
          - type: 'null'
      additionalProperties: false
      description: "\n    An environment is a collection of settings within a project\
        \ that defines how dbt is run.\n    Use it to define the version controlled\
        \ branch and warehouse connection that dbt will run on.\n    "
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    EnvironmentV3Request:
      type: object
      required:
      - account_id
      - project_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          oneOf:
          - type: integer
          - type: 'null'
        name:
          type: string
          default: New Environment
        dbt_version:
          type: string
          default: 1.4.0-latest
        type:
          allOf:
          - $ref: '#/components/schemas/EnvironmentV3TypeEnum'
          default: deployment
        use_custom_branch:
          type: boolean
          default: false
        custom_branch:
          oneOf:
          - type: string
          - type: 'null'
        supports_docs:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        deployment_type:
          oneOf:
          - type: string
            enum:
            - production
          - type: 'null'
      additionalProperties: false
      description: "\n    An environment is a collection of settings within a project\
        \ that defines how dbt is run.\n    Use it to define the version controlled\
        \ branch and warehouse connection that dbt will run on.\n    "
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    EnvironmentV3TypeEnum:
      type: string
      enum:
      - development
      - deployment
    Group:
      type: object
      required:
      - account_id
      - name
      properties:
        account_id:
          type: integer
        name:
          type: string
        id:
          oneOf:
          - type: integer
          - type: 'null'
        state:
          type: integer
          default: 1
        assign_by_default:
          type: boolean
          default: false
        sso_mapping_groups:
          oneOf:
          - type: array
            items:
              type: string
          - type: 'null'
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        group_permissions:
          type: array
          items:
            $ref: '#/definitions/GroupPermission'
          default: []
          readOnly: true
      additionalProperties: false
      description: 'Group(account_id: int, name: str, id: Union[int, NoneType] = None,
        state: int = 1, assign_by_default: bool = False, sso_mapping_groups: Union[List[str],
        NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, group_permissions: List[models.permissions.group_permission.GroupPermission]
        = <factory>)'
      definitions:
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    GroupRequest:
      type: object
      required:
      - account_id
      - name
      properties:
        account_id:
          type: integer
        name:
          type: string
        id:
          oneOf:
          - type: integer
          - type: 'null'
        state:
          type: integer
          default: 1
        assign_by_default:
          type: boolean
          default: false
        sso_mapping_groups:
          oneOf:
          - type: array
            items:
              type: string
          - type: 'null'
      additionalProperties: false
      description: 'Group(account_id: int, name: str, id: Union[int, NoneType] = None,
        state: int = 1, assign_by_default: bool = False, sso_mapping_groups: Union[List[str],
        NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, group_permissions: List[models.permissions.group_permission.GroupPermission]
        = <factory>)'
      definitions:
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    LegacySemanticLayerConfig:
      type: object
      required:
      - account_id
      - project_id
      - environment_id
      - slug
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        environment_id:
          type: integer
        slug:
          type: string
        snowflake_account:
          oneOf:
          - type: string
          - type: 'null'
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
        enabled:
          type: boolean
          default: true
        target_name:
          type: string
          default: default
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        project:
          oneOf:
          - $ref: '#/definitions/Project'
          - type: 'null'
          readOnly: true
        environment:
          oneOf:
          - $ref: '#/definitions/EnvironmentV3'
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'LegacySemanticLayerConfig(id: Union[int, NoneType], account_id:
        int, project_id: int, environment_id: int, slug: str, snowflake_account: Union[str,
        NoneType], state: Union[int, NoneType] = 1, enabled: bool = True, target_name:
        str = ''default'', created_at: Union[datetime.datetime, NoneType] = None,
        updated_at: Union[datetime.datetime, NoneType] = None, project: ''Optional[models.project.Project]''
        = None, environment: ''Optional[models.environment.EnvironmentV3]'' = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    LegacySemanticLayerConfigRequest:
      type: object
      required:
      - account_id
      - project_id
      - environment_id
      - slug
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        environment_id:
          type: integer
        slug:
          type: string
        snowflake_account:
          oneOf:
          - type: string
          - type: 'null'
        state:
          oneOf:
          - type: integer
          - type: 'null'
          default: 1
        enabled:
          type: boolean
          default: true
        target_name:
          type: string
          default: default
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
      additionalProperties: false
      description: 'LegacySemanticLayerConfig(id: Union[int, NoneType], account_id:
        int, project_id: int, environment_id: int, slug: str, snowflake_account: Union[str,
        NoneType], state: Union[int, NoneType] = 1, enabled: bool = True, target_name:
        str = ''default'', created_at: Union[datetime.datetime, NoneType] = None,
        updated_at: Union[datetime.datetime, NoneType] = None, project: ''Optional[models.project.Project]''
        = None, environment: ''Optional[models.environment.EnvironmentV3]'' = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    LicenseMap:
      type: object
      required:
      - account_id
      - license_type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        license_type:
          $ref: '#/components/schemas/LicenseTypeEnum'
        state:
          type: integer
          default: 1
        sso_license_mapping_groups:
          oneOf:
          - type: array
            items:
              type: string
          - type: 'null'
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'LicenseMap(id: Union[int, NoneType], account_id: int, license_type:
        models.license.base.LicenseType, state: int = 1, sso_license_mapping_groups:
        Union[List[str], NoneType] = None, created_at: Union[datetime.datetime, NoneType]
        = None, updated_at: Union[datetime.datetime, NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    LicenseMapRequest:
      type: object
      required:
      - account_id
      - license_type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        license_type:
          $ref: '#/components/schemas/LicenseTypeEnum'
        state:
          type: integer
          default: 1
        sso_license_mapping_groups:
          oneOf:
          - type: array
            items:
              type: string
          - type: 'null'
      additionalProperties: false
      description: 'LicenseMap(id: Union[int, NoneType], account_id: int, license_type:
        models.license.base.LicenseType, state: int = 1, sso_license_mapping_groups:
        Union[List[str], NoneType] = None, created_at: Union[datetime.datetime, NoneType]
        = None, updated_at: Union[datetime.datetime, NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    LicenseTypeEnum:
      type: string
      enum:
      - developer
      - read_only
    PatchedSemanticLayerCredentialsRequest:
      type: object
      required:
      - account_id
      - adapter_version
      - schema_type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        schema_type:
          $ref: '#/components/schemas/SchemaTypeEnum'
        values:
          oneOf:
          - type: object
            additionalProperties:
              oneOf:
              - type: string
              - type: integer
              - type: boolean
              - $ref: '#/definitions/DataclassEncryptedField'
          - type: 'null'
        state:
          type: integer
          default: 1
      additionalProperties: false
      description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
        int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type: schemas.adapter.DbtAdapterSchemaType,
        values: Union[Dict[str, Union[str, int, bool, models.encrypted_field.DataclassEncryptedField]],
        NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, state: int = 1)'
      definitions:
        SemanticLayerCredentials:
          type: object
          required:
          - account_id
          - adapter_version
          - schema_type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            adapter_version:
              $ref: '#/components/schemas/AdapterVersionEnum'
            schema_type:
              $ref: '#/components/schemas/SchemaTypeEnum'
            values:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
                  - $ref: '#/definitions/DataclassEncryptedField'
              - type: 'null'
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
            int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type:
            schemas.adapter.DbtAdapterSchemaType, values: Union[Dict[str, Union[str,
            int, bool, models.encrypted_field.DataclassEncryptedField]], NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, state: int = 1)'
        DataclassEncryptedField:
          type: object
          required: []
          properties:
            plaintext:
              oneOf:
              - type: string
              - type: 'null'
            ciphertext:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'DataclassEncryptedField(plaintext: Union[str, NoneType] =
            None, ciphertext: Union[str, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    Project:
      type: object
      required:
      - name
      - account_id
      properties:
        name:
          type: string
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: integer
          - type: 'null'
        repository_id:
          oneOf:
          - type: integer
          - type: 'null'
        semantic_layer_config_id:
          oneOf:
          - type: integer
          - type: 'null'
        id:
          oneOf:
          - type: integer
          - type: 'null'
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        skipped_setup:
          oneOf:
          - type: boolean
          - type: 'null'
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          oneOf:
          - type: string
          - type: 'null'
        connection:
          oneOf:
          - $ref: '#/definitions/BaseConnectionV3'
          - type: 'null'
          readOnly: true
        repository:
          oneOf:
          - $ref: '#/definitions/RepositoryV3'
          - type: 'null'
          readOnly: true
        group_permissions:
          oneOf:
          - type: array
            items:
              $ref: '#/definitions/GroupPermission'
          - type: 'null'
          readOnly: true
        docs_job_id:
          oneOf:
          - type: integer
          - type: 'null'
        freshness_job_id:
          oneOf:
          - type: integer
          - type: 'null'
        docs_job:
          oneOf:
          - $ref: '#/definitions/JobDefinitionV2'
          - type: 'null'
          readOnly: true
        freshness_job:
          oneOf:
          - $ref: '#/definitions/JobDefinitionV2'
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'Project(name: str, account_id: int, connection_id: Union[int,
        NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
        Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state: int
        = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection: Union[models.connection.common.BaseConnectionV3,
        NoneType] = None, repository: Union[models.repository.RepositoryV3, NoneType]
        = None, group_permissions: Union[List[models.permissions.group_permission.GroupPermission],
        NoneType] = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id:
        Union[int, NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
              readOnly: true
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
              readOnly: true
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
              readOnly: true
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
              readOnly: true
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
              readOnly: true
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    ProjectRequest:
      type: object
      required:
      - name
      - account_id
      properties:
        name:
          type: string
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: integer
          - type: 'null'
        repository_id:
          oneOf:
          - type: integer
          - type: 'null'
        semantic_layer_config_id:
          oneOf:
          - type: integer
          - type: 'null'
        id:
          oneOf:
          - type: integer
          - type: 'null'
        skipped_setup:
          oneOf:
          - type: boolean
          - type: 'null'
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          oneOf:
          - type: string
          - type: 'null'
        docs_job_id:
          oneOf:
          - type: integer
          - type: 'null'
        freshness_job_id:
          oneOf:
          - type: integer
          - type: 'null'
      additionalProperties: false
      description: 'Project(name: str, account_id: int, connection_id: Union[int,
        NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
        Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state: int
        = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection: Union[models.connection.common.BaseConnectionV3,
        NoneType] = None, repository: Union[models.repository.RepositoryV3, NoneType]
        = None, group_permissions: Union[List[models.permissions.group_permission.GroupPermission],
        NoneType] = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id:
        Union[int, NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV3:
      type: object
      required:
      - account_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: integer
          - type: 'null'
        full_name:
          oneOf:
          - type: string
          - type: 'null'
        remote_url:
          oneOf:
          - type: string
            pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
          - type: 'null'
        remote_backend:
          oneOf:
          - type: string
            enum:
            - azure_active_directory
            - github
            - managed
            - gitlab
            - manual_config
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - type: string
            enum:
            - azure_active_directory_app
            - deploy_key
            - deploy_token
            - github_app
            - git_token
          - type: 'null'
        deploy_key_id:
          oneOf:
          - type: integer
          - type: 'null'
        repository_credentials_id:
          oneOf:
          - type: integer
          - type: 'null'
        github_installation_id:
          oneOf:
          - type: integer
          - type: 'null'
        pull_request_url_template:
          oneOf:
          - type: string
            pattern: ^(http|https)://(.*)
          - type: 'null'
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        deploy_key:
          oneOf:
          - type: object
          - type: 'null'
          readOnly: true
        github_repo:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        name:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        git_provider_id:
          oneOf:
          - type: integer
          - type: 'null'
        gitlab:
          oneOf:
          - $ref: '#/definitions/RepositoryGitlab'
          - type: 'null'
        git_provider:
          oneOf:
          - $ref: '#/definitions/GitProvider'
          - type: 'null'
      additionalProperties: false
      description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
        Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
        Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
        NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
        NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
        Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
        = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
        state: int = 1, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any, Any],
        NoneType] = None, github_repo: Union[str, NoneType] = None, name: Union[str,
        NoneType] = None, git_provider_id: Union[int, NoneType] = None, gitlab: Union[models.repository_gitlab.RepositoryGitlab,
        NoneType] = None, git_provider: Union[models.git_provider.GitProvider, NoneType]
        = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
              readOnly: true
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
              readOnly: true
            name:
              oneOf:
              - type: string
              - type: 'null'
              readOnly: true
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV3Request:
      type: object
      required:
      - account_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: integer
          - type: 'null'
        full_name:
          oneOf:
          - type: string
          - type: 'null'
        remote_url:
          oneOf:
          - type: string
            pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
          - type: 'null'
        remote_backend:
          oneOf:
          - type: string
            enum:
            - azure_active_directory
            - github
            - managed
            - gitlab
            - manual_config
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - type: string
            enum:
            - azure_active_directory_app
            - deploy_key
            - deploy_token
            - github_app
            - git_token
          - type: 'null'
        deploy_key_id:
          oneOf:
          - type: integer
          - type: 'null'
        repository_credentials_id:
          oneOf:
          - type: integer
          - type: 'null'
        github_installation_id:
          oneOf:
          - type: integer
          - type: 'null'
        pull_request_url_template:
          oneOf:
          - type: string
            pattern: ^(http|https)://(.*)
          - type: 'null'
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        git_provider_id:
          oneOf:
          - type: integer
          - type: 'null'
        gitlab:
          oneOf:
          - $ref: '#/definitions/RepositoryGitlab'
          - type: 'null'
        git_provider:
          oneOf:
          - $ref: '#/definitions/GitProvider'
          - type: 'null'
      additionalProperties: false
      description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
        Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
        Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
        NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
        NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
        Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
        = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
        state: int = 1, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any, Any],
        NoneType] = None, github_repo: Union[str, NoneType] = None, name: Union[str,
        NoneType] = None, git_provider_id: Union[int, NoneType] = None, gitlab: Union[models.repository_gitlab.RepositoryGitlab,
        NoneType] = None, git_provider: Union[models.git_provider.GitProvider, NoneType]
        = None)'
      definitions:
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    SchemaTypeEnum:
      type: string
      enum:
      - connection
      - credential
      - semantic_layer_credentials
    SemanticLayerConfig:
      type: object
      required:
      - account_id
      - project_id
      - environment_id
      - semantic_layer_credentials_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        environment_id:
          type: integer
        semantic_layer_credentials_id:
          type: integer
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        semantic_layer_credentials:
          oneOf:
          - $ref: '#/definitions/SemanticLayerCredentials'
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'SemanticLayerConfig(id: Union[int, NoneType], account_id: int,
        project_id: int, environment_id: int, semantic_layer_credentials_id: int,
        state: int = 1, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, semantic_layer_credentials: ''Optional[models.semantic_layer_credentials.SemanticLayerCredentials]''
        = None)'
      definitions:
        SemanticLayerCredentials:
          type: object
          required:
          - account_id
          - adapter_version
          - schema_type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            schema_type:
              type: string
              enum:
              - connection
              - credential
              - semantic_layer_credentials
            values:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
                  - $ref: '#/definitions/DataclassEncryptedField'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
            int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type:
            schemas.adapter.DbtAdapterSchemaType, values: Union[Dict[str, Union[str,
            int, bool, models.encrypted_field.DataclassEncryptedField]], NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, state: int = 1)'
        DataclassEncryptedField:
          type: object
          required: []
          properties:
            plaintext:
              oneOf:
              - type: string
              - type: 'null'
            ciphertext:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'DataclassEncryptedField(plaintext: Union[str, NoneType] =
            None, ciphertext: Union[str, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    SemanticLayerConfigRequest:
      type: object
      required:
      - account_id
      - project_id
      - environment_id
      - semantic_layer_credentials_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        environment_id:
          type: integer
        semantic_layer_credentials_id:
          type: integer
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
      additionalProperties: false
      description: 'SemanticLayerConfig(id: Union[int, NoneType], account_id: int,
        project_id: int, environment_id: int, semantic_layer_credentials_id: int,
        state: int = 1, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, semantic_layer_credentials: ''Optional[models.semantic_layer_credentials.SemanticLayerCredentials]''
        = None)'
      definitions:
        SemanticLayerCredentials:
          type: object
          required:
          - account_id
          - adapter_version
          - schema_type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            schema_type:
              type: string
              enum:
              - connection
              - credential
              - semantic_layer_credentials
            values:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
                  - $ref: '#/definitions/DataclassEncryptedField'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
            int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type:
            schemas.adapter.DbtAdapterSchemaType, values: Union[Dict[str, Union[str,
            int, bool, models.encrypted_field.DataclassEncryptedField]], NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, state: int = 1)'
        DataclassEncryptedField:
          type: object
          required: []
          properties:
            plaintext:
              oneOf:
              - type: string
              - type: 'null'
            ciphertext:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'DataclassEncryptedField(plaintext: Union[str, NoneType] =
            None, ciphertext: Union[str, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    SemanticLayerCredentials:
      type: object
      required:
      - account_id
      - adapter_version
      - schema_type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        schema_type:
          $ref: '#/components/schemas/SchemaTypeEnum'
        values:
          oneOf:
          - type: object
            additionalProperties:
              oneOf:
              - type: string
              - type: integer
              - type: boolean
              - $ref: '#/definitions/DataclassEncryptedField'
          - type: 'null'
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        state:
          type: integer
          default: 1
      additionalProperties: false
      description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
        int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type: schemas.adapter.DbtAdapterSchemaType,
        values: Union[Dict[str, Union[str, int, bool, models.encrypted_field.DataclassEncryptedField]],
        NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, state: int = 1)'
      definitions:
        SemanticLayerCredentials:
          type: object
          required:
          - account_id
          - adapter_version
          - schema_type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            adapter_version:
              $ref: '#/components/schemas/AdapterVersionEnum'
            schema_type:
              $ref: '#/components/schemas/SchemaTypeEnum'
            values:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
                  - $ref: '#/definitions/DataclassEncryptedField'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
              readOnly: true
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
            int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type:
            schemas.adapter.DbtAdapterSchemaType, values: Union[Dict[str, Union[str,
            int, bool, models.encrypted_field.DataclassEncryptedField]], NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, state: int = 1)'
        DataclassEncryptedField:
          type: object
          required: []
          properties:
            plaintext:
              oneOf:
              - type: string
              - type: 'null'
            ciphertext:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'DataclassEncryptedField(plaintext: Union[str, NoneType] =
            None, ciphertext: Union[str, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    SemanticLayerCredentialsRequest:
      type: object
      required:
      - account_id
      - adapter_version
      - schema_type
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        schema_type:
          $ref: '#/components/schemas/SchemaTypeEnum'
        values:
          oneOf:
          - type: object
            additionalProperties:
              oneOf:
              - type: string
              - type: integer
              - type: boolean
              - $ref: '#/definitions/DataclassEncryptedField'
          - type: 'null'
        state:
          type: integer
          default: 1
      additionalProperties: false
      description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
        int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type: schemas.adapter.DbtAdapterSchemaType,
        values: Union[Dict[str, Union[str, int, bool, models.encrypted_field.DataclassEncryptedField]],
        NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
        Union[datetime.datetime, NoneType] = None, state: int = 1)'
      definitions:
        SemanticLayerCredentials:
          type: object
          required:
          - account_id
          - adapter_version
          - schema_type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            adapter_version:
              $ref: '#/components/schemas/AdapterVersionEnum'
            schema_type:
              $ref: '#/components/schemas/SchemaTypeEnum'
            values:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
                  - $ref: '#/definitions/DataclassEncryptedField'
              - type: 'null'
            state:
              type: integer
              default: 1
          additionalProperties: false
          description: 'SemanticLayerCredentials(id: Union[int, NoneType], account_id:
            int, adapter_version: schemas.adapter.DbtAdapterVersion, schema_type:
            schemas.adapter.DbtAdapterSchemaType, values: Union[Dict[str, Union[str,
            int, bool, models.encrypted_field.DataclassEncryptedField]], NoneType]
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None, state: int = 1)'
        DataclassEncryptedField:
          type: object
          required: []
          properties:
            plaintext:
              oneOf:
              - type: string
              - type: 'null'
            ciphertext:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'DataclassEncryptedField(plaintext: Union[str, NoneType] =
            None, ciphertext: Union[str, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    UserCredentials:
      type: object
      required:
      - account_id
      - user_id
      - project_id
      - credentials_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        user_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          type: integer
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        credentials:
          oneOf:
          - $ref: '#/definitions/PostgresCredentials'
          - $ref: '#/definitions/RedshiftCredentials'
          - $ref: '#/definitions/SnowflakeCredentials'
          - $ref: '#/definitions/BigqueryCredentials'
          - $ref: '#/definitions/DbtAdapterCredentials'
          - type: 'null'
          readOnly: true
        project:
          oneOf:
          - $ref: '#/definitions/Project'
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'UserCredentials(id: Union[int, NoneType], account_id: int, user_id:
        int, project_id: int, credentials_id: int, state: int = 1, created_at: Union[datetime.datetime,
        NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None, credentials:
        Union[models.credentials.postgres.PostgresCredentials, models.credentials.redshift.RedshiftCredentials,
        models.credentials.snowflake.SnowflakeCredentials, models.credentials.bigquery.BigqueryCredentials,
        models.credentials.dbt_adapter_credentials.DbtAdapterCredentials, NoneType]
        = None, project: Union[models.project.Project, NoneType] = None)'
      definitions:
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    UserCredentialsRequest:
      type: object
      required:
      - account_id
      - user_id
      - project_id
      - credentials_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        user_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          type: integer
        state:
          type: integer
          default: 1
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
      additionalProperties: false
      description: 'UserCredentials(id: Union[int, NoneType], account_id: int, user_id:
        int, project_id: int, credentials_id: int, state: int = 1, created_at: Union[datetime.datetime,
        NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None, credentials:
        Union[models.credentials.postgres.PostgresCredentials, models.credentials.redshift.RedshiftCredentials,
        models.credentials.snowflake.SnowflakeCredentials, models.credentials.bigquery.BigqueryCredentials,
        models.credentials.dbt_adapter_credentials.DbtAdapterCredentials, NoneType]
        = None, project: Union[models.project.Project, NoneType] = None)'
      definitions:
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, pull_request_url_template: Union[PullRequestUrl, NoneType] = None,
            state: int = 1, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, deploy_key: Union[Dict[Any,
            Any], NoneType] = None, github_repo: Union[str, NoneType] = None, name:
            Union[str, NoneType] = None, git_provider_id: Union[int, NoneType] = None,
            gitlab: Union[models.repository_gitlab.RepositoryGitlab, NoneType] = None,
            git_provider: Union[models.git_provider.GitProvider, NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.4.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          - is_running
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.4.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            href:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              type: boolean
          additionalProperties: false
          description: 'Run(id: Union[int, NoneType], trigger_id: Union[int, NoneType],
            account_id: int, environment_id: int, project_id: int, job_definition_id:
            int, status: int = 1, dbt_version: str = ''1.4.0-latest'', git_branch:
            Union[str, NoneType] = None, git_sha: Union[str, NoneType] = None, status_message:
            Union[str, NoneType] = None, owner_thread_id: Union[str, NoneType] = None,
            executed_by_thread_id: Union[str, NoneType] = None, deferring_run_id:
            Union[int, NoneType] = None, artifacts_saved: bool = False, artifact_s3_path:
            Union[str, NoneType] = None, has_docs_generated: bool = False, has_sources_generated:
            bool = False, notifications_sent: bool = False, blocked_by: List[int]
            = <factory>, scribe_enabled: bool = False, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            dequeued_at: Union[datetime.datetime, NoneType] = None, started_at: Union[datetime.datetime,
            NoneType] = None, finished_at: Union[datetime.datetime, NoneType] = None,
            last_checked_at: Union[datetime.datetime, NoneType] = None, last_heartbeat_at:
            Union[datetime.datetime, NoneType] = None, should_start_at: Union[datetime.datetime,
            NoneType] = None, trigger: ''Optional[models.RunTrigger]'' = None, job:
            Union[Dict[Any, Any], NoneType] = None, environment: Union[Dict[Any, Any],
            NoneType] = None, run_steps: ''Optional[List[models.RunStep]]'' = <factory>,
            status_humanized: Union[str, NoneType] = None, in_progress: Union[bool,
            NoneType] = None, is_complete: Union[bool, NoneType] = None, is_success:
            Union[bool, NoneType] = None, is_error: Union[bool, NoneType] = None,
            is_cancelled: Union[bool, NoneType] = None, href: Union[str, NoneType]
            = None, duration: Union[str, NoneType] = None, queued_duration: Union[str,
            NoneType] = None, run_duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None, queued_duration_humanized: Union[str, NoneType]
            = None, run_duration_humanized: Union[str, NoneType] = None, created_at_humanized:
            Union[str, NoneType] = None, finished_at_humanized: Union[str, NoneType]
            = None, job_id: Union[int, NoneType] = None, is_running: bool = None)'
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
